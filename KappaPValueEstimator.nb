(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    135635,       3393]
NotebookOptionsPosition[    128448,       3286]
NotebookOutlinePosition[    128816,       3302]
CellTagsIndexPosition[    128773,       3299]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Made in Mathematica 12.0.", "Text",
 CellChangeTimes->{{3.801321878661709*^9, 
  3.8013218818798647`*^9}},ExpressionUUID->"2759cb34-ba5e-454c-b4e5-\
4bd8df43868b"],

Cell["\<\
This file takes cell movement data and assesses the bias of the each cell\
\[CloseCurlyQuote]s movement with respect to an attraction site.\
\>", "Text",
 CellChangeTimes->{{3.8013970070929613`*^9, 3.8013970103086863`*^9}, {
  3.8013971455120277`*^9, 3.801397184370346*^9}, {3.803161478998945*^9, 
  3.803161480550057*^9}},ExpressionUUID->"c35ad362-441f-442b-9171-\
49f1bc800d38"],

Cell[CellGroupData[{

Cell["Measuring attraction in cell movement", "Section",
 CellChangeTimes->{{3.800439620133025*^9, 
  3.800439626500613*^9}},ExpressionUUID->"285602ab-1d64-4f16-bde4-\
56bbdff81d19"],

Cell[CellGroupData[{

Cell["Introduction", "Subsubsection",
 CellChangeTimes->{{3.801397216791662*^9, 
  3.801397217813405*^9}},ExpressionUUID->"b4f2c1cd-df86-465c-9fd2-\
5f116843f567"],

Cell["\<\
This notebook reads in two files: a file containing positions of T cells and \
a file containing positions of a attraction site. Example input files are \
provided, named TCellParasitePresentV1OT1File.csv, \
TCellParasitePresentV1ParasiteFile.csv, and \
TCellParasitePresentV1PlaneFile.csv. As this notebook is evaluated, it \
outputs the estimated kappa from the Von Mises Fisher distribution estimating \
the angles of movement of each cell with respect to the attraction site, then \
performs a Chi Square test to give a corresponding p-value signifying the \
significance of any bias for each cell. The kappa and p-value help determine \
if a cell is attracted or repulsed to an attraction site and help measure the \
bias.\
\>", "Text",
 CellChangeTimes->{{3.7998599996918364`*^9, 3.799860062197303*^9}, {
   3.799925211070202*^9, 3.799925349593343*^9}, {3.799942100720908*^9, 
   3.799942114081815*^9}, {3.799960543099139*^9, 3.799960629877124*^9}, {
   3.800013832614395*^9, 3.800013978043296*^9}, {3.8000226788274183`*^9, 
   3.800022763462879*^9}, {3.800084556203597*^9, 3.800084663014085*^9}, {
   3.800107119421218*^9, 3.800107149593062*^9}, {3.8004300210928383`*^9, 
   3.8004301813786697`*^9}, {3.800430225609085*^9, 3.800430277705463*^9}, 
   3.800440397231141*^9, {3.80044071683702*^9, 3.800440717083699*^9}, {
   3.800443505321931*^9, 3.800443509099988*^9}, {3.800474759421945*^9, 
   3.800474775129479*^9}, {3.803161487597109*^9, 3.803161547490666*^9}, {
   3.803162558557392*^9, 3.803162566994582*^9}, {3.803311242016404*^9, 
   3.803311242508357*^9}},ExpressionUUID->"817478d9-ca7a-43f7-bc3b-\
4c223f7be159"],

Cell["\<\
A user of this file should be aware of several items to potentially change - \
three or four paths/file names and one option. Specifically: the path of the \
directory containing input files, the parasite data file name or plane \
description file name, the T cell data file name, and the \
\[OpenCurlyDoubleQuote]parasiteMode\[CloseCurlyDoubleQuote] variable, \
described later. 

We advise running the file first on the sample data before using other data \
to make sure everything works. \
\>", "Text",
 CellChangeTimes->{{3.7999627802147207`*^9, 3.799962820648242*^9}, {
   3.8000139843577137`*^9, 3.800014020725225*^9}, {3.800022908575315*^9, 
   3.800022920370874*^9}, {3.800084701797702*^9, 3.8000848054454813`*^9}, {
   3.80008489404813*^9, 3.800085086956552*^9}, {3.8001081985936537`*^9, 
   3.800108229285604*^9}, 3.8001089550518312`*^9, {3.800373489899363*^9, 
   3.8003735081437197`*^9}, {3.800430300400723*^9, 3.800430417029889*^9}, {
   3.800440729683507*^9, 3.800440751823008*^9}, {3.801321824325218*^9, 
   3.8013218574919653`*^9}, {3.8013948609375477`*^9, 3.801394884270833*^9}, {
   3.801395534159617*^9, 3.801395581930407*^9}, {3.8013975563912697`*^9, 
   3.801397567745598*^9}, {3.8014018282460117`*^9, 3.801401828378881*^9}, {
   3.801909914029951*^9, 3.801909917670953*^9}, {3.80316274924854*^9, 
   3.8031627932362967`*^9}},ExpressionUUID->"5b4afbe7-9aa4-4406-9837-\
908483d913fc"],

Cell[TextData[{
 "For new users of Mathematica, the following information may be of interest:\
\n\nEverything in Mathematica is separated into ",
 StyleBox["cells",
  FontSlant->"Italic"],
 ", including these comments. Runnable code is also grouped into cells. We \
will subsequently refer to Mathematica cells as ",
 StyleBox["blocks",
  FontSlant->"Italic"],
 " [of code] to avoid confusion between Mathematica cells and biological \
cells. To run a block, place the cursor in the block to run and press \
shift->enter.\nSome lines of code (in blocks) are followed by semicolons: \
having a semicolon at the end of a line prevents the line from showing \
output. Semicolons can be removed or added at the ends of lines as desired.\n\
Output blocks may be deleted at will (the data is stored); some outputs in \
this file can be quite long, so deleting may be advisable."
}], "Text",
 CellChangeTimes->{{3.801397198387638*^9, 3.8013972123603277`*^9}, {
  3.80139754167283*^9, 3.8013976117985983`*^9}, {3.801397644176323*^9, 
  3.801397764439784*^9}, {3.801401773695394*^9, 
  3.801401780795142*^9}},ExpressionUUID->"7bde6f3b-0ea3-47c1-a2b2-\
f07f7927a9fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The real deal", "Subsubsection",
 CellChangeTimes->{{3.801397221290839*^9, 3.801397221719542*^9}, {
  3.801397777534889*^9, 
  3.801397782732532*^9}},ExpressionUUID->"27ad105a-44c0-4b4f-87d3-\
bb9be104e4a9"],

Cell["\<\
Set the directory in the second SetDirectory command to the location of the \
parasite and cell data files in the block below. (The example path is in a \
mac format. For information about paths , including about Windows, go to \
https://reference.wolfram.com/language/howto/InsertAFilePath.html.)

(The first SetDirectory command resets the current directory to home and \
should not be changed. Note that as these two lines do not have semicolons, \
they will print first the home directory, then the chosen location of the \
data files.)\
\>", "Text",
 CellChangeTimes->{{3.7999220056118298`*^9, 3.7999220146553907`*^9}, {
  3.7999254359243298`*^9, 3.799925597374361*^9}, {3.799961004054531*^9, 
  3.799961023177519*^9}, {3.800014029246189*^9, 3.800014092839951*^9}, {
  3.80002293905619*^9, 3.800022949988737*^9}, {3.8000851492770576`*^9, 
  3.800085201329606*^9}, {3.800085451524267*^9, 3.800085588718279*^9}, {
  3.8001089827448587`*^9, 3.8001089989450083`*^9}, {3.800376175124056*^9, 
  3.800376183695825*^9}, {3.80043058847094*^9, 3.800430618965662*^9}, {
  3.8004306507763977`*^9, 3.800430734768003*^9}, {3.8004408037764387`*^9, 
  3.8004408381329613`*^9}, {3.8004744613223953`*^9, 3.8004744617030573`*^9}, {
  3.80132145032778*^9, 3.801321470735169*^9}, {3.8013960741887493`*^9, 
  3.801396106207705*^9}, {3.801822398415366*^9, 
  3.801822401992679*^9}},ExpressionUUID->"74e4f7d5-40c1-403a-a49e-\
51cf960ac3ea"],

Cell[BoxData[{
 RowBox[{"SetDirectory", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"SetDirectory", "[", "\"\<Downloads/Kappa\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.79383944237036*^9, 3.793839459656662*^9}, {
  3.801321486868929*^9, 3.801321500344466*^9}, {3.8017528315505953`*^9, 
  3.801752836297661*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"7f349f48-2754-4698-8bfe-fd8aadca9ea4"],

Cell["\<\
The variable anglePDF is set to the probably density function of the Von \
Mises Fisher distribution used to approximate angles. It is used in the log \
likelihood maximization.\
\>", "Text",
 CellChangeTimes->{{3.7995902162433033`*^9, 3.7995902340646267`*^9}, {
  3.800014098840906*^9, 3.8000141307758293`*^9}, {3.8000229653142242`*^9, 
  3.8000229682421913`*^9}, {3.80008561751157*^9, 3.800085633720758*^9}, {
  3.8001090163366833`*^9, 3.800109025316082*^9}, {3.800430760277464*^9, 
  3.800430819275457*^9}, {3.800441024793342*^9, 
  3.800441027042123*^9}},ExpressionUUID->"2393a141-bc0c-4eb5-96ef-\
c2eeb9f46232"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "z", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "k", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"anglePDF", "=", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"k", " ", 
     RowBox[{"Cos", "[", "z", "]"}]}]], " ", "k", " ", 
   RowBox[{"Abs", "[", 
    RowBox[{"Sin", "[", "z", "]"}], "]"}], " ", 
   RowBox[{"Csch", "[", "k", "]"}]}]}]}], "Input",
 CellChangeTimes->{
  3.799145183646031*^9, 3.801321509999206*^9, {3.8017516138538113`*^9, 
   3.801751656334078*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"cc7dbd36-a449-41b4-b640-d1a0250a952c"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"k", " ", 
    RowBox[{"Cos", "[", "z", "]"}]}]], " ", "k", " ", 
  RowBox[{"Abs", "[", 
   RowBox[{"Sin", "[", "z", "]"}], "]"}], " ", 
  RowBox[{"Csch", "[", "k", "]"}]}]], "Output",
 CellChangeTimes->{
  3.8028945333773537`*^9, {3.803035269391776*^9, 3.8030352710930967`*^9}, 
   3.803637389008738*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"53d307bf-571e-48cf-a158-df1f7db7cb4b"]
}, Open  ]],

Cell["\<\
Enter the name of the desired parasite data file to read from between the \
quotes. The parasite file should be a list of (x,y,z,time) with a header row. \
The earliest time should be no smaller than 1.\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQbVNxrFzN/43jtSTdKhDtZnpv9RwgXc1auAZEt207
tvIYkGZ/k78KRPNf+ZtzAkjLC3dVgeifzy0P3wTSO34mngTRu8TPPATR+6pu
genvusHLPwPpz426q0B07vEz378DaYYHL36C6IbHZyaKBbxxfMLPMxlEP+aO
WQiit/lOWQqiz1z48EcRSFsfzfwLoiPed8ntB9J1HzJ1QXRHeY4hiFaI1jYD
0TWPJKSPAOnsz/pg2rxGqvUKyLxJ8WCa67WJ1t8goDnOAWC69pxk6sPQN47t
r63A9CeR2fkg+mCyciGI/rAtUOwNkL4eEwWmF7wvld8S9sZxyfFlYDowxmfr
ViD96Py9bSAaAMb1tLE=
  
  "],ExpressionUUID->"5075977a-3b12-4c9a-9cd5-5f0cd1bb2d26"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parasitefullfile", " ", "=", " ", 
   RowBox[{
   "Import", "[", "\"\<TCellParasitePresentV1ParasiteFile.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"parasitecolumns", " ", "=", " ", 
  RowBox[{"parasitefullfile", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"parasitefile", " ", "=", " ", 
  RowBox[{"Rest", "[", "parasitefullfile", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7987445842821693`*^9, 3.798744591728285*^9}, {
   3.7991452080579243`*^9, 3.799145208191001*^9}, 3.799593909904819*^9, {
   3.799962755465177*^9, 3.799962755623756*^9}, 3.800474657650652*^9, {
   3.801321513668023*^9, 3.801321514767109*^9}, 3.801321570165307*^9, 
   3.801321774196548*^9, 3.801606486942257*^9, {3.801753724647697*^9, 
   3.801753746199708*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"39134413-5f5a-4793-966f-fd3dcebfa105"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"x pos\"\>", ",", "\<\"y pos\"\>", ",", "\<\"z pos\"\>", 
   ",", "\<\"time\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8035508117679033`*^9, 3.803551111062451*^9, 
  3.803554115256568*^9, 3.803555420235044*^9, 3.8035554931791677`*^9, 
  3.803555607492509*^9, 3.803557453863353*^9, 3.803637391313751*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"440d64e1-a434-4432-bc67-2c0aaf3e54ab"]
}, Open  ]],

Cell["\<\
The number of recorded parasite positions is listed. Then parasitemean and \
parasitefirst variables are set to the mean parasite position and the first \
recorded parasite position, respectively. The final printed array contains \
every location in the input file of type \[OpenCurlyDoubleQuote]string\
\[CloseCurlyDoubleQuote] (including empty cells) - if this array is not empty \
then the elements at the corresponding locations in the parasite file must be \
changed to numbers for the file to work.\
\>", "Text",
 CellChangeTimes->{
  3.80160648424039*^9, {3.801756344588986*^9, 3.801756364138859*^9}, {
   3.803479502203856*^9, 3.8034795927424097`*^9}, {3.803550740340371*^9, 
   3.803550791096591*^9}},ExpressionUUID->"386805f9-9fb5-4864-a3f4-\
36d03c3b6c45"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Length", "[", "parasitefile", "]"}], "\[IndentingNewLine]", 
 RowBox[{"parasitemean", " ", "=", " ", 
  RowBox[{
   RowBox[{"Mean", "[", "parasitefile", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"parasitefirst", " ", "=", " ", 
  RowBox[{
   RowBox[{"parasitefile", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parasitedatatypes", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "#", "]"}], "&"}], ",", "parasitefile", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Position", "[", 
  RowBox[{"parasitedatatypes", ",", "String"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8016064749943743`*^9, 3.801606478480516*^9}, {
  3.8034793474769382`*^9, 3.8034793546281843`*^9}, {3.803479495705208*^9, 
  3.803479499483807*^9}, {3.803551123849326*^9, 3.803551133970736*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"3481aada-d569-4a1b-beb5-b1111c5dd719"],

Cell[BoxData["96"], "Output",
 CellChangeTimes->{
  3.8028945662809353`*^9, 3.803037272739787*^9, 3.803479355662518*^9, 
   3.803479499809306*^9, 3.803550815387583*^9, {3.803551114281475*^9, 
   3.803551134346027*^9}, 3.8035541171723843`*^9, {3.803555417511265*^9, 
   3.803555423481632*^9}, {3.8035554912300987`*^9, 3.8035554951553164`*^9}, 
   3.803555610522889*^9, 3.803637394895803*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"82e2a0a2-1a18-4ad9-aa29-97ec875933f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"241.4274918`", ",", "187.782513`", ",", "23.441548389999998`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8028945662809353`*^9, 3.803037272739787*^9, 3.803479355662518*^9, 
   3.803479499809306*^9, 3.803550815387583*^9, {3.803551114281475*^9, 
   3.803551134346027*^9}, 3.8035541171723843`*^9, {3.803555417511265*^9, 
   3.803555423481632*^9}, {3.8035554912300987`*^9, 3.8035554951553164`*^9}, 
   3.803555610522889*^9, 3.8036373948990917`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"6cd09e5d-5c82-4f5b-8236-df124d31cbb4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"241.4274918`", ",", "187.782513`", ",", "23.44154839`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8028945662809353`*^9, 3.803037272739787*^9, 3.803479355662518*^9, 
   3.803479499809306*^9, 3.803550815387583*^9, {3.803551114281475*^9, 
   3.803551134346027*^9}, 3.8035541171723843`*^9, {3.803555417511265*^9, 
   3.803555423481632*^9}, {3.8035554912300987`*^9, 3.8035554951553164`*^9}, 
   3.803555610522889*^9, 3.8036373949014683`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"6b63eb06-5f03-436f-9a71-4ed39d9e2817"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.8028945662809353`*^9, 3.803037272739787*^9, 3.803479355662518*^9, 
   3.803479499809306*^9, 3.803550815387583*^9, {3.803551114281475*^9, 
   3.803551134346027*^9}, 3.8035541171723843`*^9, {3.803555417511265*^9, 
   3.803555423481632*^9}, {3.8035554912300987`*^9, 3.8035554951553164`*^9}, 
   3.803555610522889*^9, 3.803637394903759*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"401b0b6d-ef96-45a2-8b79-8df451f8c9d3"]
}, Open  ]],

Cell["\<\
Enter the name of the desired T cell data file to read from between the \
quotes. The data file should be a list of (x,y,z,tag,time) with a header row. \
The datatags and datatimes are set to contain the unique tags (cell \
identifiers) and unique times (at which positions are recorded). The earliest \
time should be no smaller than 1.
After the data is shown, the total number of recorded positions is printed, \
followed by a list of tags and the list of times. The final printed array \
contains every location in the input file of type \
\[OpenCurlyDoubleQuote]string\[CloseCurlyDoubleQuote] (including empty cells) \
- if this array is not empty then the elements at the corresponding locations \
in the data file must be changed to numbers for the file to work.\
\>", "Text",
 CellChangeTimes->{{3.7995939275637493`*^9, 3.7995939338843393`*^9}, {
   3.799923039033093*^9, 3.799923042405442*^9}, {3.799961349537858*^9, 
   3.7999613565774937`*^9}, {3.800014175185638*^9, 3.800014232434619*^9}, {
   3.800023228769202*^9, 3.800023259743886*^9}, {3.8000856799512157`*^9, 
   3.800085767016685*^9}, {3.800085813403719*^9, 3.8000858753326178`*^9}, {
   3.800109043945857*^9, 3.800109053709777*^9}, {3.8004747063168497`*^9, 
   3.800474708319003*^9}, {3.801760078887492*^9, 3.801760093217403*^9}, {
   3.801821961595277*^9, 3.801822015881178*^9}, {3.803122763599886*^9, 
   3.803122776401566*^9}, {3.803144357685442*^9, 3.8031443635604143`*^9}, {
   3.803479599312196*^9, 3.803479602866435*^9}, {3.803557312640347*^9, 
   3.803557317071743*^9}, 
   3.803639366930057*^9},ExpressionUUID->"1f78f8a0-8eaa-4471-8471-\
380d87cc399e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"datafullfile", " ", "=", 
   RowBox[{
   "Import", "[", "\"\<TCellParasitePresentV1OT1File.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"datacolumns", " ", "=", " ", 
  RowBox[{"datafullfile", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"datafile", " ", "=", " ", 
  RowBox[{"Rest", "[", "datafullfile", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "datafile", "]"}], "\[IndentingNewLine]", 
 RowBox[{"datatags", " ", "=", " ", 
  RowBox[{"Sort", "[", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"datafile", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"datatimes", " ", "=", " ", 
  RowBox[{"Sort", "[", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"datafile", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datadatatypes", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "#", "]"}], "&"}], ",", "datafile", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Position", "[", 
  RowBox[{"datadatatypes", ",", "String"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7938394723986607`*^9, 3.7938394751437817`*^9}, {
  3.795132138631177*^9, 3.795132146315254*^9}, {3.795391861017961*^9, 
  3.7953918618725767`*^9}, {3.7999627595375566`*^9, 3.799962759876771*^9}, {
  3.8004746983987017`*^9, 3.80047470096338*^9}, {3.80132177982014*^9, 
  3.801321781619384*^9}, {3.801753872857584*^9, 3.8017538929253407`*^9}, {
  3.8017590375336437`*^9, 3.801759054615144*^9}, {3.801821992143764*^9, 
  3.8018219937108383`*^9}, {3.8029891507167053`*^9, 3.802989155257292*^9}, {
  3.803479610069591*^9, 3.803479625187009*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"f2a4c1df-d34d-48c1-8d50-22ac0434d46a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"x pos\"\>", ",", "\<\"y pos\"\>", ",", "\<\"z pos\"\>", 
   ",", "\<\"tag\"\>", ",", "\<\"time\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.803035296021442*^9, 3.803479082490572*^9, {3.803479625699329*^9, 
   3.803479632398307*^9}, 3.803637397051293*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"36a28206-2bb5-479e-805e-f01b8ac9bbc7"],

Cell[BoxData["1191"], "Output",
 CellChangeTimes->{
  3.803035296021442*^9, 3.803479082490572*^9, {3.803479625699329*^9, 
   3.803479632398307*^9}, 3.803637397138734*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"3998693c-5b67-425c-b8f6-99461cf78e35"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
   ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", 
   ",", "15", ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", 
   "21", ",", "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", 
   ",", "28", ",", "29", ",", "30", ",", "31"}], "}"}]], "Output",
 CellChangeTimes->{
  3.803035296021442*^9, 3.803479082490572*^9, {3.803479625699329*^9, 
   3.803479632398307*^9}, 3.8036373971412373`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"8c8afae2-ec88-45fc-a68e-07378ace10f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", 
   "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", "28", 
   ",", "29", ",", "30", ",", "31", ",", "32", ",", "33", ",", "34", ",", 
   "35", ",", "36", ",", "37", ",", "38", ",", "39", ",", "40", ",", "41", 
   ",", "42", ",", "43", ",", "44", ",", "45", ",", "46", ",", "47", ",", 
   "48", ",", "49", ",", "50", ",", "51", ",", "52", ",", "53", ",", "54", 
   ",", "55", ",", "56", ",", "57", ",", "58", ",", "59", ",", "60", ",", 
   "61", ",", "62", ",", "63", ",", "64", ",", "65", ",", "66", ",", "67", 
   ",", "68", ",", "69", ",", "70", ",", "71", ",", "72", ",", "73", ",", 
   "74", ",", "75", ",", "76", ",", "77", ",", "78", ",", "79", ",", "80", 
   ",", "81", ",", "82", ",", "83", ",", "84", ",", "85", ",", "86", ",", 
   "87", ",", "88", ",", "89", ",", "90", ",", "91", ",", "92", ",", "93", 
   ",", "94", ",", "95", ",", "96", ",", "97", ",", "98", ",", "99", ",", 
   "100"}], "}"}]], "Output",
 CellChangeTimes->{
  3.803035296021442*^9, 3.803479082490572*^9, {3.803479625699329*^9, 
   3.803479632398307*^9}, 3.8036373971434937`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"1fe470f8-ef27-4a02-9f58-30f351c4c498"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.803035296021442*^9, 3.803479082490572*^9, {3.803479625699329*^9, 
   3.803479632398307*^9}, 3.803637397145512*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"b5c52381-599d-437c-bccc-33e6ddddc187"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"parasitefile", " ", "=", " ", 
    RowBox[{"Rest", "[", "parasitefullfile", "]"}]}], ";"}], "*)"}]], "Input",\

 CellChangeTimes->{
  3.803557587429298*^9, {3.8036374071191053`*^9, 
   3.803637408061145*^9}},ExpressionUUID->"04b37847-3804-4fd7-84b6-\
822da4e15ed3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"parasitetimes", " ", "=", " ", 
  RowBox[{"Sort", "[", 
   RowBox[{"parasitefile", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "4"}], "]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"missingtimes", " ", "=", " ", 
  RowBox[{"Complement", "[", 
   RowBox[{"datatimes", ",", 
    RowBox[{"Intersection", "[", 
     RowBox[{"parasitetimes", ",", "datatimes"}], "]"}]}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.8035541400523567`*^9, 3.80355415496774*^9}, {
  3.803555627013258*^9, 3.803555627121586*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"6e87c5f0-fc81-4474-9836-734215650c54"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", 
   ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", "16", ",", 
   "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", "22", ",", "23", 
   ",", "24", ",", "25", ",", "26", ",", "27", ",", "28", ",", "29", ",", 
   "30", ",", "31", ",", "32", ",", "33", ",", "34", ",", "35", ",", "36", 
   ",", "37", ",", "38", ",", "39", ",", "40", ",", "41", ",", "42", ",", 
   "43", ",", "44", ",", "45", ",", "46", ",", "47", ",", "48", ",", "49", 
   ",", "50", ",", "51", ",", "52", ",", "53", ",", "54", ",", "55", ",", 
   "56", ",", "57", ",", "58", ",", "59", ",", "60", ",", "61", ",", "62", 
   ",", "63", ",", "64", ",", "65", ",", "66", ",", "67", ",", "68", ",", 
   "69", ",", "70", ",", "71", ",", "72", ",", "73", ",", "74", ",", "75", 
   ",", "76", ",", "77", ",", "78", ",", "79", ",", "80", ",", "81", ",", 
   "82", ",", "83", ",", "84", ",", "86", ",", "87", ",", "88", ",", "89", 
   ",", "90", ",", "91", ",", "92", ",", "93", ",", "94", ",", "95", ",", 
   "96", ",", "97", ",", "98", ",", "99"}], "}"}]], "Output",
 CellChangeTimes->{3.803557588667234*^9, 3.803557666971733*^9, 
  3.803637413018271*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"8c35b08f-6480-4899-9d76-39b3a9bf0805"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "85", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.803557588667234*^9, 3.803557666971733*^9, 
  3.80363741302448*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"66a163d4-17f9-4788-843c-0a4e889df661"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"missingtimes", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "1"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"parasitefile", " ", "=", " ", 
     RowBox[{"Prepend", "[", 
      RowBox[{"parasitefile", ",", 
       RowBox[{"parasitefile", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"parasitefile", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], " ", "=", " ", "ii"}], ";"}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"missingtimes", " ", "=", " ", 
   RowBox[{"Rest", "[", "missingtimes", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"parasitefile", " ", "=", " ", 
     RowBox[{"Insert", "[", 
      RowBox[{"parasitefile", ",", 
       RowBox[{"parasitefile", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"missingtimes", "[", 
           RowBox[{"[", "ii", "]"}], "]"}], "-", "1"}], "]"}], "]"}], ",", 
       RowBox[{"missingtimes", "[", 
        RowBox[{"[", "ii", "]"}], "]"}]}], "]"}]}], ";", 
    RowBox[{
     RowBox[{
      RowBox[{"parasitefile", "[", 
       RowBox[{"[", 
        RowBox[{"missingtimes", "[", 
         RowBox[{"[", "ii", "]"}], "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", "4", "]"}], "]"}], " ", "=", " ", 
     RowBox[{"missingtimes", "[", 
      RowBox[{"[", "ii", "]"}], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"ii", ",", 
     RowBox[{"Length", "[", "missingtimes", "]"}]}], "}"}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.80355526537496*^9, 3.803555335526545*^9}, {
  3.803555389936685*^9, 3.803555406312375*^9}, {3.803555437457103*^9, 
  3.803555583676661*^9}, {3.8035573462566957`*^9, 3.803557366233861*^9}, {
  3.80355742351721*^9, 3.80355743900149*^9}, {3.80355749421206*^9, 
  3.803557540245479*^9}, {3.803557609410754*^9, 3.803557660101763*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"95e7c163-3fa3-498b-bac5-1988a49d9d5c"],

Cell["\<\
The following block uses the tags and times to rearrange the data from a list \
of positions associated with times and tags into a list of lists of \
positions, with each inner list corresponding to a cell and the positions in \
each inner list in order of time. It prints the number of cells, then the \
number of recorded positions for each cell.\
\>", "Text",
 CellChangeTimes->{{3.799836058431882*^9, 3.799836069659293*^9}, {
   3.799961978278309*^9, 3.799962046250328*^9}, {3.8000142434303923`*^9, 
   3.800014299930274*^9}, 3.800023533972067*^9, {3.801759650185369*^9, 
   3.801759661390926*^9}, 
   3.8018224241608763`*^9},ExpressionUUID->"329c9d86-f376-407f-9005-\
f270125b39e4"],

Cell[BoxData[
 RowBox[{"dataorganized", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"SortBy", "[", 
     RowBox[{"#", ",", " ", 
      RowBox[{"Function", "[", 
       RowBox[{"a", ",", 
        RowBox[{"a", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], "]"}]}], "]"}], "&"}], " ", "/@", 
   " ", 
   RowBox[{"GatherBy", "[", 
    RowBox[{"datafile", ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ")"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8029908987235527`*^9, 3.8029909148086987`*^9}, {
  3.8029912300988913`*^9, 3.802991230862399*^9}, {3.8030379629185123`*^9, 
  3.803037963595662*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"c3fce618-ecb8-4472-9480-a22e053f4709"],

Cell["\<\
There are several options for how to interpret the parasite positions: \"Mean\
\", \"First\", \"Correcting\", and \[OpenCurlyDoubleQuote]Plane\
\[CloseCurlyDoubleQuote]. To choose an option, set the parasiteMode variable \
to one of those options.  
- \[OpenCurlyDoubleQuote]Mean\[CloseCurlyDoubleQuote] means that the angles \
are calculated with respect to the mean parasite position.
- \[OpenCurlyDoubleQuote]First\[CloseCurlyDoubleQuote] means that the angles \
are calculated with respect to the first recorded parasite position.
- \[OpenCurlyDoubleQuote]Correcting\[CloseCurlyDoubleQuote] means that the \
cell positions are adjusted with respect to the parasite to eliminate the \
potential artifact of parasite movement. This requires at least as time \
points with recorded positions for the parasite as there are time points with \
recorded positions for any of the cells.
- \[OpenCurlyDoubleQuote]Plane\[CloseCurlyDoubleQuote] means that the \
\[OpenCurlyDoubleQuote]parasite\[CloseCurlyDoubleQuote] file instead contains \
three position describing a plane, with the desire of determining attraction \
to a plane instead of a point.

Note - these options are case sensitive. The other three have been commented \
out below for simplicity (between (* *) ). Choose one option to have \
uncommented and make sure the other three are commented (surrounded by (* *) \
), then and run the block.\
\>", "Text",
 CellChangeTimes->{{3.799593980825609*^9, 3.799593994747097*^9}, {
   3.7998603036037273`*^9, 3.7998603821604137`*^9}, {3.7999253552560596`*^9, 
   3.7999254328240013`*^9}, {3.799960644482092*^9, 3.79996065363693*^9}, {
   3.79996089738385*^9, 3.799960938442205*^9}, {3.800085954482773*^9, 
   3.8000862347384443`*^9}, {3.800108241661042*^9, 3.800108302904468*^9}, {
   3.8004304264295807`*^9, 3.800430580669829*^9}, 3.800440774435403*^9, {
   3.801320646400153*^9, 3.8013206517434387`*^9}, {3.80132118353328*^9, 
   3.801321198066848*^9}, {3.801394822733666*^9, 3.8013948443333397`*^9}, {
   3.801822393657596*^9, 3.8018223940886106`*^9}, {3.80316284977938*^9, 
   3.8031629212603903`*^9}, {3.803308838778974*^9, 
   3.803308888166128*^9}},ExpressionUUID->"d8a712e7-2e21-4e7a-9026-\
0c77d3344a24"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{"parasiteMode", " ", "=", " ", "\"\<Mean\>\""}], ";"}], "   ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{"parasiteMode", " ", "=", " ", "\"\<First\>\""}], ";"}], "  ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"parasiteMode", " ", "=", " ", "\"\<Correcting\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "  ", 
    RowBox[{
     RowBox[{"parasiteMode", " ", "=", " ", "\"\<Plane\>\""}], ";"}], "  ", 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.799593960214427*^9, 3.799593978794382*^9}, {
  3.799600621896893*^9, 3.7996006231570263`*^9}, {3.800108273947629*^9, 
  3.800108284408647*^9}, {3.800440776820942*^9, 3.800440788182369*^9}, {
  3.8031629099674683`*^9, 3.8031629164034023`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"3295426e-a36b-483f-b1a2-976c485dbba5"],

Cell["\<\
The following block adjusts the data to take into account the parasite \
position using the option chosen for parasiteMode at the beginning of the \
file. The adjusting takes the form of altering the positions of the data, \
with the result that the parasite position with respect to the data is always \
at {0,0,0}.\
\>", "Text",
 CellChangeTimes->{{3.799836072314097*^9, 3.799836081651074*^9}, {
   3.799962193595867*^9, 3.7999622092530727`*^9}, {3.80001430701676*^9, 
   3.800014401617495*^9}, {3.80002399536736*^9, 3.8000240448924303`*^9}, {
   3.800085917895816*^9, 3.8000859241355257`*^9}, {3.8000862516942244`*^9, 
   3.800086369380476*^9}, {3.800376201224592*^9, 3.800376204756534*^9}, {
   3.800376386782579*^9, 3.800376416032606*^9}, 3.801822430926558*^9, 
   3.803637420980435*^9},ExpressionUUID->"d7630805-b913-42b8-92ff-\
dc3ea118e5d6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataadjusted", " ", "=", " ", 
   RowBox[{"Switch", "[", 
    RowBox[{
    "parasiteMode", ",", "\[IndentingNewLine]", "\"\<Mean\>\"", ",", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"dataorganized", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "3"}], "]"}], "]"}], "-", 
          RowBox[{"parasitemean", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"dataorganized", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "dataorganized", "]"}]}], "}"}]}], "]"}], ",",
      " ", "\[IndentingNewLine]", "\[IndentingNewLine]", "\"\<First\>\"", ",",
      " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"dataorganized", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "3"}], "]"}], "]"}], "-", 
          RowBox[{"parasitefirst", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"dataorganized", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "dataorganized", "]"}]}], "}"}]}], "]"}], ",",
      " ", "\[IndentingNewLine]", "\[IndentingNewLine]", "\"\<Correcting\>\"",
      ",", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"dataorganized", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "3"}], "]"}], "]"}], "-", 
          RowBox[{
           RowBox[{"parasitefile", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"dataorganized", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], "[", 
              RowBox[{"[", "5", "]"}], "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"dataorganized", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "dataorganized", "]"}]}], "}"}]}], "]"}], ",",
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\"\<Plane\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"regne", "=", 
       RowBox[{"RegionNearest", "[", 
        RowBox[{"InfinitePlane", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"parasitefile", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"parasitefile", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"parasitefile", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "}"}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"dataorganized", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "3"}], "]"}], "]"}], "-", 
           RowBox[{"regne", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"dataorganized", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"dataorganized", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "dataorganized", "]"}]}], "}"}]}], "]"}]}]}],
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataadjusted", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"DeleteDuplicates", "[", "#", "]"}], ")"}], "&"}], "/@", 
        RowBox[{"Split", "[", 
         RowBox[{"dataadjusted", "[", 
          RowBox[{"[", "ii", "]"}], "]"}], "]"}]}], ",", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", 
       RowBox[{"Length", "[", "dataadjusted", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"datacollapsed", " ", "=", " ", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{"dataadjusted", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<pholder\>\"", "+", "_"}], ",", 
         RowBox[{"\"\<pholder\>\"", "+", "_"}], ",", 
         RowBox[{"\"\<pholder\>\"", "+", "_"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], ";"}], "*)"}]}]}], "Input",\

 CellChangeTimes->{{3.7996002629496517`*^9, 3.799600270691743*^9}, {
   3.799600366721633*^9, 3.799600402878737*^9}, {3.799600466284932*^9, 
   3.7996005265681753`*^9}, {3.799600585765987*^9, 3.7996006176435843`*^9}, 
   3.799792168815737*^9, {3.799836013053615*^9, 3.799836036293117*^9}, {
   3.801822089229453*^9, 3.801822089414631*^9}, {3.802991250665052*^9, 
   3.8029912781345778`*^9}, {3.8030387275752707`*^9, 3.803038735125346*^9}, {
   3.8031639667089987`*^9, 3.80316398311379*^9}, {3.803492888140345*^9, 
   3.803492901908773*^9}, {3.803507027747957*^9, 3.803507039038814*^9}, {
   3.803507073346569*^9, 3.803507073614694*^9}, {3.803550852862884*^9, 
   3.803550880129298*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"3aa908c9-cd5d-4125-b7f7-401142db1a02"],

Cell["\<\
The following block displays the paths of the adjusted data, as well as the \
location of the parasite in space, to help visualize what is being analyzed \
and to verify that the data has been read correctly.\
\>", "Text",
 CellChangeTimes->{{3.8002845428942204`*^9, 3.800284546291568*^9}, {
   3.8002860018425426`*^9, 3.800286023597425*^9}, {3.800431084321187*^9, 
   3.80043137758036*^9}, {3.8004412500405407`*^9, 3.8004413011815023`*^9}, 
   3.8018224341419086`*^9},ExpressionUUID->"95c766a9-fea0-4a43-9269-\
f2b263ebd79d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"colorsarray", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"dataadjusted", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "dataadjusted", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics3D", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"dataadjusted", ",", 
       RowBox[{"VertexColors", "\[Rule]", "colorsarray"}]}], "]"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"parasiteMode", "\[Equal]", "\"\<Plane\>\""}], ",", ",", 
       RowBox[{"Sphere", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "10"}], "]"}]}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x (\[Mu]m)   \>\"", ",", "\"\<y (\[Mu]m)  \>\"", ",", 
      "\"\<  z (\[Mu]m)   \>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "0", ",", "100", ",", "200", ",", "300", ",", "400", ",", "500"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "100", ",", "200", ",", "300", ",", "400", ",", "500"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"75", ",", "110"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"BaseStyle", "->", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesEdge", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1.4907995483594878`", ",", 
      RowBox[{"-", "2.4540507460308554`"}], ",", "1.7932266009951316`"}], 
     "}"}]}], ",", 
   RowBox[{"ViewVertical", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.009458232476703991`"}], ",", "0.010203631502068773`", 
      ",", "0.9999032091870627`"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7998348412140827`*^9, 3.799834843126464*^9}, {
   3.799834877913617*^9, 3.799834878515493*^9}, {3.7998349110301332`*^9, 
   3.7998349135281563`*^9}, 3.799850356537092*^9, {3.799850421427109*^9, 
   3.7998505179053583`*^9}, {3.7999627216928673`*^9, 3.799962741155365*^9}, {
   3.8030387400806313`*^9, 3.8030387423098383`*^9}, 3.8032217455786543`*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"24f6019b-47e0-4204-b57d-9ef2ba83a3c7"],

Cell[BoxData[
 Graphics3DBox[
  {Thickness[0.005], Line3DBox[{CompressedData["
1:eJxNkntIU3EUx7dKMSqImZhhhNLEMnV497imyxMLnWC/0kmauy6TymGalqnz
kW98kI8kX5SLFg0LlVmtXGqKGrlEbgbRG/+ofhfTcmX4CIUaLbz3j/PPh8P3
nPM9X6/kjJjT63g8ntBe6+3lUvMa25bEsPXWM9o4REHyijwjqE4Ed3Y0Ywki
4Om8Hmm7Kdh/PNK0WB8E03IBHk4goOL5DaToYDkZnsfgm2KweBfQHSMcbihk
ol0IyNSOo7CfLNcVO+OxDwToFNn03k2Ja1y7xRf/MRHwUXUBpXH4cg4fG/3E
QO7sRQITq2NZLsHdMjFcOWKl1aMsd/nyDquLCYjNHKGn/Fge36JghDlSh84u
jr7THP6cLYH4vn66cpyCJr7E5j4ncvAFCUSVTtDeL1gdqymGubwqhds97fQJ
AwX7lJWaXL0/6N5vxET5fx9SOffm85iH5TLoqa+m455w9q9KZ2YNUqh2bUOz
egqSbKmafJ9AWC5zYt6oSNCFP0IyIwWxOtPUy0k/ULqqGQ+zDCZ1Y3SJ3c9M
QdZUcFaAQ4dPwg+3CbTwioJvPkbNULo/tLV24T1RMqhNbERXzexc395a3LEo
Bd3vArqMw6sjPuGvLSSEpvSgvsOsP9PIEztFSx1/HGb7t9/rxw33pVAo6UK/
SinYHB5nUpSLwLdIj0eFMmjzN9OqFE4eZrOZPI9gCD2VQXefZfnb7xG4VBjs
yFUVZ09tHZO+RDp8Pslybfs2Rp4QApZxC7Je4/Ald+auIQSOWivQYAEF5nOR
gUyLCJTJCVhFyMHz0nnUaP8XOqSweT8QAUnV4BCbHGIFRehMPic/nTM4N+AA
7H5soPmcnP+7C4dBSbERXU+iQDmTopko8oGmtMn51mMAGzz1qE5BQaibVtOJ
vGBAvDJvcT4IF1cHUMOgek3nL+4jmL4=
     "], {{-208.82989277000001`, 276.8834721,
      18.55845161}, {-204.69159092, 281.0244938, 18.55845161}, {-205.52499165,
      281.4194828, 18.55845161}, {-202.21639027, 283.2325016, 
     18.55845161}, {-202.84349217000002`, 285.0184819, 
     18.55845161}, {-202.30129017000002`, 286.8924748, 
     18.55845161}, {-202.63229145000003`, 291.62648360000003`, 
     18.55845161}, {-204.57849278, 296.3174931, 18.55845161}, {-206.81939091, 
     299.197498, 18.55845161}, {-208.63859333000002`, 300.0815007, 
     18.55845161}}, CompressedData["
1:eJxFk2tMk3cUxosozuq0KpFWIFSngBYmEKS1fWuP9RKBQBU0MkVsoZe30AVw
crVhTFfRuSFMEc0oDrDgEqiViVza2r/Qgg7a4cCpmyLbNGXeGFQcyCtdAwn7
8Hz55cnJc87Jsyo5PU4yh0Qihbrk7hJj4DbWmKOAREligNhXBnMfNPIbg5aj
i9uthKBZAbcDxPYGkRQyVl1qv79rKZrXcNfw6q0CakEqKz0rgZ0nvVVJEe6z
fq0mIuAZWQIhV9YuamU5TAekXcQv6Qo4373DriwTQ0hEkyrqpDtyvGrBQskK
SBUJZZ4vU2b58BE10aNNg9W9goAzwhQgtTC6+W4Vppjzl5XLytKgJ/Ogfe9g
MpRQmGSj4p3p2flrRH92GiSWcu3xZclAihk5OFzTwjukQ0R+XBpMVSbU/eQQ
QW9NuoOfOcYLQDpiwicNgh4flG21ioAetu6NLsLB09/tUiJzKoyTpXX5i0WA
KwX5NPMcaKitIuJjUqFdLKiriheC7qkpX39qCfgF3SR+eCIHeldq7KbAQ6Cz
RRm9Xy2FLzC98sU+OfS3I1sgJQkeza9Pys74CBjHLZiHnxzWtFbZ3P5NBPYn
kVffFofB6dcWg2MYB0ycbmvoOzDLn41cJwqXy+HBgrxY85f7Z/m6TT1YEoED
pbrTpnEmzPLPOy5hRZ5yWJRgtb0v/J/fsXYbMhg4rNm8UB12NAYUveUDU8cC
YAtPjd3IwmFPud2nvDMatJVnB5hX6HDx+R2iJhWHl2Ms32W/R4I4bx9X+CsN
BINqZVsRDo96z6kLju2EXcIFRtFfVPDy0xnGbuDwNGmeuil6B1Q0EZgv22vm
DiYcAu9t9j3Ttg0K0UZuZPFyWOt9ndBYXfv+/aBiQLYVgCN2eHw7yttgvYlp
jTiYf75TkRu6BYbuJavK/liABEuQIfsCDiznVfbhXBagyUOqTvmHKDiwHdtf
gMOgpiTrWHQwFPp7qshPF6IixjWlXYQDafTE84p5fsDaWMn/xn8pEr1rJVbT
XPzPubV9+U4elvWY/2bSE03/HckA7dEEazMXo5bcHFWb3R11kJuV4jIZCJld
nvNfrET0PD55InrStOm3HmVytgwGp27TNoz6ocBR7gnOe3d0S9KmpKx0+dkj
p92+X48oe86pijPJaPpfR6QwPmk3502EI9L9wobmwz08EzIqDWFSYGGfWY5e
5iCSkKnNkbbzWhPqsURX3yiLjZaO7RxEZd7Kk9/1AH21BptLl0HLwEuLx24O
otev45YOU6HBTUM4XTk/UMVZKp1sdKQkjGuI8IbpXi/EgR5Ct0T5MNGQnsbt
baLC9F4qHC68Zli2cULRyVoeV9tCBd8fqw3b63EoiSv/OiWEgcTZK4zxmhUw
xmzEHg665lCyv9p7fD0awsO5u7u9ZvKIcRhikztzYkNQf0yUseA7n5k8wTj0
Pud1Mh+GoXN9bsaPn1Bhuqf+OPyT6zR/ygxHhNXLGD1Eg9DDemyOBIcM7zzL
eIcrDymLq0vxgf8AW2wuIA==
     "], CompressedData["
1:eJxTTMoPSmViYGDQBGJmIL6maH7Y1ybhwJ2wzecqYgMdXqSo7r1lLeVg9c29
2N494YBP45lzStMDHUo2TYp7K6vsoBbmpnw/MOEAQ8cqP9s+mLimw2w2188N
zQkHTC7v9cu6gBA/dlqveGpvwoGSTYf9nr8PgorrO2Tc9DTmmZJw4IHrynMm
v4Lg6psOuU4uOJ9wwKDziN8hw2C4+n13zZNtFRIOLOFecM5bOhiu/k957TOd
Y/EHeCLOnvubEexgFem5/lufkcPJx5vbZPziD1T8rD7XNAVhjkzSnmehk+IO
1PTmnbv0EGHOLuGJbDGv4yDhsBWh/u/W1W5P38QeEFh07NzS+Qj1FeuXqHVn
xELDDSE+MapIzZwVU3zSjAVt77OjD7zJ7Tt3hScE7s53IqvZHorFHODhnuzn
KRECt/dX9iY323PRB0wu1JyL9UOob/o+3+311+gDXxgbz6lEIdQLiTe4vZwU
g2H+lT89aQfMYnGKg+M3HyHO4h57TCMBKG4yyS/vGiIc6op2pk2/FYsRzrDw
RA+f2I6qtLy6OEh8nUaov3M6x23PA0xxy/DmZytj4w6csJnuJ/AGIc52eGfb
zK+Y5i/Qmrrs+35M9dH88Wpcs+MPlPzZ49dfh1C/7O3KZ8xO8ZB47wyGp+cV
P0vaPlfGH3DYuNIvyQahHuwvpfgDKY8WnFM7GgQ3/wOXsfIm/oQDFyqOn2v4
iEjnHrqWk2ebAdP5+qZzt0oR+UX+ncnjugxM8aqt5sF7lBIPxPitO3eNP8Dh
2LJtAZyFhgfA+YIh8UDbrBq+diOEeOFxB+cU18QDDWxdfOahCHFwvjiTcEAh
f8W5yB0I8wFgS9az
     "], CompressedData["
1:eJx1k3tIU3EUx4faMpvgTLFCaJbm7OUGPkILX3ETQ+7v3jtDDR+Yr6TMiZCh
E0tdvobOsEIxNSuFRBuZiWkdZFxEIhxlUVr5SEQwZRJZoJA47/3lbv7x++fD
h+85v8M5HilX6TQbkUgUvP5s15/d2QRWnomgzUApfRQM7G38HO5ldAV5QT37
ZxnBqXO1UmRiINT76PzY16kQjhsiCEp5GXOn+6nism4EqWyxfkCOeWdEtrZR
jmDsWhFlsxPzSdd0IjUQQT9S6Wcf0qAIeF4WVW4LQXU5bEwUAreJLOW7Vpr3
3we9ZPNdEdRUZUlNLPa5HGs+PPNM604gyPVh1PYdNP8vjsf8SpCulmHu4JAr
9q9EEJXjp58JE/rWvEMzKHECEsyf6s0jaxTPFS+ydCsFQs75qz2h6t67mJ+M
dHcMniPBMzuJGq+n+P77GvY7lrWRkL+QYXChMefmYO1zOdHeRUpRHuaFflXi
b8EIjI21StqFAvZxL9qlVkLpsEbsuw/B6z2XTOYAzCVei5KuJBIYTbjp7gji
cyaGRyWnU0iL/xb9P+cfXvy02vGLu9DfLscoO6Nrat8+f6P/QtxnfGE3W5Qo
5NNJSYREi+DnbLK+f5CC6ugrrc7Th0FR3ibuuijkXM7GfjbjHGe3YmLeYfMu
Yjn/GO9bzw0+PCIyjyMYbIjW654g3ufmXxqSOT20RvL+g4BkYo5E0JIRq7zh
gX3uv0MH/NRT6XgOPb8TdWsLJDRd0On1FcL5bHAPoW9dl+unK7DAENaJtvI2
4Z60LKQTIfMIRpfOm1vjqK3+bsrifxdyy73TPM+ZNBI1J4S82q5L23yHghXf
eH1KD+Z191q0S+MU2EsiDc4fMe9BhSzpQcMOkUZ6qJ3ZyitokPfFUiULmI/m
pYmTzZtcpeL5wb5i7Q8RY7nrCtXm/GVgcx205kUabHpLpAWhKv5Ol31vsm9k
DFSKS5WaYBV/F3lHXhGB/gzI5vPVt6JU/F5t1I1jLHUHcN0hWTPh5MKAV6fO
cNszhud/AaCWrtg=
     "], CompressedData["
1:eJxTTMoPSmViYGAQB2JmINbf4iV9RSPrAA/3ZD/PgDCHHt/chUKPFA5c8/d8
/tYy60BO2eRzZUUI8RkaXtHx7zMP/LEqONfxNcxBYvYtJ9UjogfkJT0Wt6Rl
HbhQ2uZX0o8QT65y876sk3VgCfeCc97G4Q4GZltbvTqYD1x87nF5aXzWgR+f
t/u9nYEpznI+6dyNXQhxKwVv8ZV3sw4YPGw7t9AyHG6+jIjn6ckzsw7YpG/w
21WLEC+t8Ppf6YJbvKY379ylg+EY7u8QnuH3mjUCLq64xst7l3jWAZE3+8/5
LguHh0N1jddzNm/c4iyXFvs95YmAixsoeDZb5WYdaLiefq7qBEL9Lhuvx/Kb
sg/sUKo+t/wVQlxJwnOzAlAc3Rzj9x7qP+5kY7hz20WvbFmJnANX9tf7ybRF
wMNt4QyP1UH/sg/c4Kz0O8IS6eCgrv3y6r2H9qdeum3OPZF9QGXnwnOM+ZEO
F056VW0t53EAh0NJ9gEZ1fXnNm5EiAMAO9UDDg==
     "], CompressedData["
1:eJxl0WtIU2EcBvCjY4cQKzMndvOGurTLjKwsyA2jgYZ382zTxJ1Ns5sZZVgs
0dLN0JyVlWWa0W0QqGeeMzS0Hqcc7KpdRrP80IWg+3XBgooEm4v24f3y4+F5
/+//DaN3ZhZ6EwQRPXEEE2eP+AAf00Jhd5o5VppIoz5lx3n/F6Fw+b1aZnTV
b/WUs+k6Pi2DwrxUc3xXII2glieJkUMifAy4Sj63UMiQWIJsDvWUlz4bkhsb
KBBClug8pUbsSq4muVYw1XPkW3exr9Wdd3msgXXuz3N7hXALH05R6HnMBm0q
c8+jEDTp58729Pb3RXKpl8LD47xuyP1Hcjy8RFusD/6Sg0WfzOXZoW533dsp
M9ee+Sdfb6uTv7yZg2QnVzAS4znnNR0TdPSfngefB/jRCgqrv7CVc+JdHjWV
N8y31F6Y6c7n8yY+agWF5VlcfNt4gYcnGNnhJoPbq4cPkJJ9FF5s5Baeve3p
//f4tWnJGikFP/9uU+8Ply+GStfJV1ymcOgta2p47faL5j5ScVeBXh/utc2p
xhmfsqqCiHDIFLy+ZIYSKYJuQiSmoXW+s97tFSG4xKBf76+EZifXqAimUVRH
DwQ2h8Ny8xTJ6pQQ9zPN0jAafR2bw7TvwkEQl+RH6pQ47DArStfQ2B7dbx2S
LMDbFiOvO6SEV6HFvm0VjXHf4HVZ2fMn92ZUojqPsSfJaNwKixCIiRDYq3bL
A2gltr1iTO0TPeokw8DTK6FIGN/C/4ISthROcTCTxrPsi1Z7x9//kqgw3si0
Z5ymcWxZgKBIHwJr6Dm5n06F8g9M+bX7NHqW+g5OT5kD59eT5Nh+FaLTWVmZ
twb2eZzVMRYwuWdGBWErV2k7rsFPpzNx1HsWih9ayKevVKhK5R4lmTVYOHPx
oJEQwWFqJZdF5OKJg7njK9FijzZk3QZKNPnerFzsesM0LtFoESf7ZdXvDUSM
o4vML8nF6XrLdmFkIaZdF+q3qqajvXiQ7CLzsJY2o1RcCOL7lcuGEyPSP+Dv
4j4=
     "], {{-176.94799198, 
     244.743488, -11.441548390000001`}, {-176.10968937, 
     246.60048260000002`, -8.441548390000001}, {-174.10829319, 
     248.13847700000002`, -5.441548390000001}, {-172.49109043, 
     249.84648479999998`, 0.5584516099999988}, {-169.82998814, 
     252.57149090000001`, 6.558451609999999}, {-171.39599003, 
     252.57149090000001`, 6.558451609999999}, {-167.74218907, 253.0934941, 
     6.558451609999999}, {-167.22019352, 255.1884953, 
     6.558451609999999}, {-167.22019352, 256.7544743, 
     6.558451609999999}, {-166.43639530000002`, 258.0994755, 
     9.558451609999999}, {-167.66948857, 262.0854985, 
     18.55845161}, {-168.18148960000002`, 267.2274968, 
     18.55845161}}, CompressedData["
1:eJxTTMoPSmViYGCQBGJmIP62JWOZwpS4A4UvZ3zWUS1wuHDSq2prOY/Dz+xN
brbf4g7Mm7j2sq92gcOLFNW9t6ylHHxf7VpWFhV/YGrL/MkzpRDiR3Wynv2/
HX9gyv1Fk10NCxxKNk2KeyurDBeveD5LuDUIIb7Hwjr5JU/CAR+ljZMLEmDi
mg4Nsp6TZSQSDsjar7+8WLPAwSrSc/23PiOHf7vtisX8Ew5srFkuHGWPUG95
3cD5sXzCgZdMKz5fikKYD1P/9f184fZGhPozfc6bF8YnHMjYsPKzxmaE+KYj
cc0zmxMOPI9d/bnuOsIcmPjp1MXF+34gxJd8sWa+uSThgMysTZf9lQrh4hYF
SYvdfyccEJ2zYfN3t0J4+PwxjVwsl5x4oNZhgXHnukJ4OB9x9Vw8d2LigeTw
JZdVriLU8wm5Hz53PPFAmdM8YUPbIrh6B2O3zzPvJELia26Rg4O69sur9x7a
B1m5X9bnTzrw4OvMzXI3EOIRrJ7K77mSDmw12GDMJVEMNyfjpqcxj0LSge9T
5gjfFiqGq4eJT9CeVTzVBCG+gcE7WNM06UD17MXGpoHFDgZmW1u9OpgPwMQf
xK+8rJaEEAcAcUMeTQ==
     "], CompressedData["
1:eJwtU39Qk3UYH+ABMsLxa1znXoXt3RiwiLt3I0xo3yISde8goYKC5HAoRwsm
Ack6vV3KQlJviUjR++qQo+WpbR1KyBHvc9UVCSpwqFOLFkJCSgwYv6f0nuOP
55/Pfe7zPM/n8zxRhWW7irw5HM4LbPmwBUEUca4/Hs5UaNVTLZkIym8HbPtu
njEsCBXpWhkkT9ip4egMxGtortkt9gWbfy9R1xcLBZG7sK4+NTLEyIxjpV5Q
UFgkn8mXgPvDr7BZMYkSys3c0E/mGLTprGLUJoWEvU5qUEGigisN3Kw9q4xO
lEq4aqWQ3fhQ0JioQsj795qwfA4UxFTJg67jUPy9D726sBPpXDkBbZIVxuDE
CalbBNq0eSpjTIU4W+qbncttDIpoJn6BKNC9XErjQSSC/kfxQ3V/MQ5rviJ2
nwhqUw3Y9iEVcgwEcRdeczLouoWgMnAowIJpayzLD3eHt1v/YWzXbslPtQjB
VDUpCGtn9e2F0/rLR5Wc8c2Eb6AY0stTaZ9Sls9YXeqPnihN3stEeboYkpZH
KGEWiTgv6vifnhlhOGkbEw1zYuhrP4DxvyCR0yveqP85EDz6Yshc1GKCEdaf
CJprueJmzOsXFScPiMAWOkPVbmF1Bo++UXa2TenxXwhS4jDtpyERzxgRsPTH
DIPuXpDfiMDBPH2C9tpDInOnj3G+3g8iD/5J5N3D4fXKIxiPw84plcXJku8z
5qxpReeECPLi7gkePlAhQw0x/nzD30pHkUbhXSUC/9OHsHoTu69l5JIprZvh
da3K3y0Twre4m+qrYHHt4Zmffm1iHCUl8rATQujaeoeSalTImddd3ZTri2xk
t9xchIP9voA+v57N8bHG1Wd6qoxsGFNALA7IEIhtbVQhc0is3j7ot8YXgey3
SvqdZhWS/ndSv22Ii3g9PonHPhaB/L1i2jK8E/WMBuk74wJR/+56xb/7cYCE
DPpJngp9ebxVvxjqhUzGDYnGKhxGNZ/RNzaQKDLt5mxP74oy4VQH0fGKGMaz
DtJ12ey9ZdtnBw1LSmj8Qd7ztgiGdnyA7WXvxGmocz2eXVF68pKAIW+AupCt
Ro6xu3r42hc988EqAcrNp2VN6rW+zyFHS658cVgCR9T+WMXnLP/Qxh8rg3nI
1MGR77jD4m9upw0patQ/UKw/dzoQPfOhJBoiX1Vhykk236oH+n3fcFEBrlO4
XdGef2klke3pwJwqfUnpkFUqNrVGwzrvY1gqm2/OuqnqpCQO0llyFP4vrenk
k8iwn6+fLPNDcOsi0a2UeP7xIokyeUUpUzHBHpwRg+BSLjZlJZE2czb5ragQ
5IxLJ/hXJXDZMkrZ+SRyHbd3jYaEeOZvlAAPnxJcm2DzOn+z62pvmIdfLQZe
dAJ9m0sizWZhyvuPwtH/pCbuKA==
     "], CompressedData["
1:eJxTTMoPSmViYGCQAmJmII6r9vgcypN/QKXUR/2xfrLDB3XlLyHJf+1h4h+K
jdTjeJIdGuSlVrNrH4aLJ/30U9/ClOzAkPr70uV39+HiX974ph/anORw4N5j
ru+Xv+6Hib9psVFPupbkoPAxmPu26Xe4OFOf3/JjD5McArhOcC9X+QQX75sU
/vzGlSQHB7lYSSH7x3DxSXcCnjfcT3JI8Fze+leE7QBMvE7WIv1IF9D8zjqu
y53/4erZ1qQ9r5NIctghKNe2k5MJrt5vquXyxUxJDgzWsm1xEZxw8RPqKc/X
SiY5vNCf0Tq9hwsufmydx3JPriSHDxVLuH+z/4abv8/NPP3lm0QHiec7WksM
ueHq90mFLf95J9Gh4PQibtelCPfEcUWq7ziQ6LDhby+3o+6//SujPQJaNucd
uMQa8HzpzUSHCU9jvzZE/rNPLDiRcjgv74BVXdxy9/hEB4YXj3c6eczfv2q7
xMxt5nkHPpwzVeeSTXRYcOTzc9F1T+xP+XO87+bMO3DjRIr6pucJDgHuqV+v
rP5pX3BEw+mmcB7E/bsSHA6slq+6JsbvcG5VB0M2UHxOX7R65/IEhwnrXleJ
afE4fNjSkfWJKe/ArdxEdbbqBIcL589UnbvJ6XCt38Py1YHcAw2HTNIl8hIc
Zmi8qDr9idmhbrkHT9GE3ANLuBec834c7yAwvaKq5R67w7cZHplp3LkHVvya
eo59QbxDQm3a3mupQg4A/qYrjQ==
     "], {{-205.45999302, 312.1994816, 
     18.55845161}, {-205.40339054, 312.1994816, 
     18.55845161}, {-205.50099339000002`, 312.1994816, 
     18.55845161}, {-203.23169102000003`, 309.9274785, 
     18.55845161}, {-203.9193932, 312.1994816, 
     18.55845161}, {-203.44979252000002`, 311.5694767, 
     18.55845161}, {-199.07119145000001`, 312.1994816, 
     18.55845161}, {-195.59109272, 312.1994816, 18.55845161}}, CompressedData["
1:eJxTTMoPSmViYGCQBWJmIP6+4WyNbUSyQ5nTPGHD5mIHgdXxbUGujAe+31ln
o/sgCS6+oMdJbJLi4/1/5x+usZRCqC8we8TdveL3fnmdfX9Wfkaob9gbqO0z
/+L+yIOn/tR9SHLYzzfHOCm92EFhhQa37ONv+/m3z6uZehGh3uGz2FXngjv2
uhqHbKK+JTk4iy4O3sMPtNc/jCd8+l+I+a+THH5YzhTWVwOqTwrX4Hl5df9z
63V/NJ4lORS+nPFZJxUo/tVX7BzD4/1rly38E8yKcKfCrH9fdjz6ZK8qveXP
0rcIewtOL+J2Xfpx/3rveX+Wv0hy+DdpnrGxXLHDgSxt8WXHnuxPlbhkc/t/
kkPLio3FLzWB4mmzLnKfu22veHHXn7+vkhy+vp8v3C4JND/tW2VPF6PD6aIT
e468S3JYfmrO5UDRYgeNd5Oq3EMYHaYvuPDn9+Mkh3sBczefUgKq/8r4VWXF
P/vWti01k4WSHSZZLZv8UbbY4cGEVZUXWhgcdkassYl5mOTgwTIzeMfjIocD
DW++vlv/yx5sPtC/GRtWftY4XOSwwluyas9zZofdi5basKgkQ8xfVeQw4VdD
lVAIu0O4zLk/WrzJDqvqln5mXFLkoGFVuHeao7CDbPvBP6FA9Y1fVgRb9hc5
KBzQruozZXEAh4NEskNq2obPDQ1FDgXGFTy+gR/2b+XbbLOFK9nh4OYZxttS
gO5hDa264cgE8a9ZssOD+JWX1YKKHF4c068qO8TjIJ25cs9cx2SHY2Vriw8B
xRsWX/m84vpv+506p2tydJMdfJQ2Ti7wKnJgSOQ4F/znnn30pBV7DiknOyRu
Wn75gmeRQ4LDt6rv11kcuj1P7pmvkQxJP0BxC/mUKrtTPA4A6NlPJg==
     
     "], CompressedData["
1:eJxTTMoPSmViYGDgA2JmIOZpNupVe+l34J2mpfq2s/kOJZsmxb2V1XfImazP
m7HT94Dug/XCHLIFDlaRnuu/9Rk5MDB49UpN9z8w7bTb85qnMPWaDit+lrR9
Zgw4EBO5aPMZ/QKouLJDgenrnvf2fgcqns8Sbp1V4HDhpFfV1nIeBxFx1d6y
Mt8DzqKLg/fcRYhfcH3BY/jBB6L+HULcJfdAz7l+nwMGWiuFN8QXOjioa7+8
eu+h/R3NMN5DZ/0OzLRYsdnzbKHDjiM8rdsmchww6FjMtq454MC8iWsv+4oW
OTxQT3zBKfTc/sC1pW4ZvYEHzkuumZxXXOSwImxh5fNYVgeD7UfdsjSCDpjc
22iccKnIwUFU4su19A/2VpMKjoUyBR/gvzm7+HVZscOEFm1bNRYBBxPG/W5C
x4MOlDnNEzZsLnYQWH+pyns3nwMAYhSbeg==
     "], CompressedData["
1:eJxTTMoPSmViYGCQAGJmII6r9vgcypN/QGedtXr7mzwHtrKOg19+KR2AibOt
SXte9yPPweVyW+O2IGW4+KQ7Ac8bnuc57FmXrpjCrXJAeJ9H/Xe53AM/uNKW
V/HlORyISzz4V0XhQMxtt5NrZuUc2PPHNt3xVq7DfaWsxoPuugfKFNySM+Rz
DmhZJKa/7811OLZsWwBnoeGBk2s9tz89m33ghZWz+q5ohPiM3+7B1uXZB3Zs
ckmfqZ7rsOn9rEMC0+QOSNz02p/vm33gTGHs81CRXIfr6cWOSndUD7A4uc22
C88+MOtlnLqpQK7D3P/ZjArRegdMOzynNyVmH5hgHvJchyHX4bJnNKPWTo0D
AfPc/3OFZh84lOK/fOH/HIdn8RmMMtEaB15qexhvC84+kLA+VJ3nS45DcE/9
w15X1QMz0912LzTOPnAhIfh54LMch7oJqQeP3Fc70DnBzf2UVvaBtlbP5Sp3
chzk9k1baG2neMBF0+u6mnP2gQU3QtQNt+U4lGyqPOizRevAXm6v9ruG2Qdk
eK2fNwHNmfmt+yGzmtKBKd88qr0ssg+c+uG4/OOFHIc/H1c4+R6SPSDE7cUt
Jpd9ICY1Rj1lbo5DiOZ0p+/G0geYZ3mZB5hlHzjC6bP8664chweM+w9FHpE/
sPWBa3zjlOwDBmeC0+0/5zjkNH86dOyW7IGUhV7di7hzDuyTClv+MyXXoZQ1
/uDpf4oHNAs8NP/o5B4w2+2Zbv0z16Hn2EEny8MSB+oWedT2JuceSPrpp74F
GL8LmmY6aUaJHAAAStMSHA==
     "], CompressedData["
1:eJxl1HtQVFUYAHBQQWiSaLAZJR6ubtLQDlv0IAT0g0Aed0HkHm1rGIGzvF1X
wBBOIbGko+agEBAqYykR0kCmVowyDd0YIIMdp3FitHgN98Kio5Y8Fj1ij1u7
cVj84/zzmzPf/e73fedT4N1JGUscHBwi5LNUPp7vR1ODGYHgYxA33Y0Rsrwj
FZcSlMIGtw9oi/s2MDXWYa0iVuhpakt0zX9JyPXOJNn9CCK7ntddn4uZ98Aj
J+mnswgqr1wTJ6aZt5mO0s9HEKQ7NIs9L7M45aUbiL4agdJPKWEX5k0XC0jY
UQSDvsFSVADz17w0RPoCweshHfjiM8ynWmro2rMIbkb7SOML4gSEn6H3v0LQ
aMzBfasX+W4EzXtOi9XAfG8UR1xiEHR5mMWVbcyTet+m9YkIHug7MXFk7mMI
o/4htvy1C/L0raB/cAhu+P8g5lmYmwfyCY5EsKq1HBf2MT+piqXKtQi075bi
cynMA/urabQTgkTzEbxjCfOHoZtJpnz/UJBC11jMvNT4Hi0e4qHsswAd4lj9
P6qvI6OzPLjsP4X73ZnvqAulW1wRqC7146Z1zAM2ppLb8ndvmErwg5AF/T30
Fqke5OF4wiPsUMy8NKic/nyVh3Rnf2lkgrmn3wFybJgH7b7vxfanF9XhSQSh
Q0QMHmT3N2pLKP83D/q6AbxOirGfB2dbPccX/ZcPgitO3rohr0VzNceD5n4t
btgVaz+fPbZ8JhfVs4GHyj4P3UxU3Lz/9ucBktvMW/uexvyJFTl0fTcPNe2u
uvOezDtn9tCoKR5aM67j5AkWv90jmoSvRDCW1CS6r2H3P0zJonmTPKypvIed
CfNZSwXtHefhldiD4q3hOPu5us1D4y/PSatMzP86XEY9lyLYvylb7NzH3H8m
k7yhtvWXjxPGAnMumIPV1n65IXjH20kKKWL3IxoK6ZyFt8YZYr79uyqSLvel
pKVQLEjkHpvPbIuvVK/n7Purkv/36xek2p3MO1KN1BIqv6Mco6hPYd77YiNp
e+r/98gJocW5Wzf/qBYMWSnEXY6jVO/ExnhOWNaRpzD8pBLw2F6yTJ7/88ur
RamCxSn45gTteiT3Xfuszo9y9nUb4MHrk8tiWJJm3j8Wt9ASuW43I4fwr+uZ
Xy1KpluVtvh3ucfmTfVtjXhilBMyjuWHV5xSW/uoQADXJkU3Cyfkh+1yTDGo
he2XE+mbryK4Yz4upsZr7N+RHL+yuwoPGJnPTmlIh5yP15mHOG6G+bnfG+iX
07xtD8TPe0JZGp12tO2NEXa/82wwqQqW98Ytk5hboxHKTuemLe9SWff2NgQ1
yd1i0AWNcK9Wb2yd8bfmvxqBy8FhcTSCxf9vn/y7f+6s0BU1Mf8HUnYJ9g==

     "], CompressedData["
1:eJxl1H9MVWUYB3CyZTgDu8zAIQJGARXzdm1GjrP14DJDyzwxh0RA9zn33F9c
YVeR1A5po0LmyN2V1mQIyMCQXdnpKvHj8MO6oI0JXKmBC+LHYmqAemJIgwN2
5pzP5fbH+89n7573+77v877rMecDfpmfn1+iOp5Uh+huZJ75DeFkhYH9qDKj
vbO6ftcKu649flOvENiH8P1e3nGkmDzNeEW5Poxwvc0ozp8iDwg6KyQu4yDu
G14cqyVvjOsSbFMIQectbOsP5IlvljL1owj9rxrkje3kLXluYfUthKszHDtS
Q/4w5whCa7bNM1Tps+4dhLBcm3jDa/7nTLMwoeZ8OsEqB5aTF7dVCvE9CN07
LXb3EPn7I6VCUz/CpMUoLhwiX2upkUplhFVlNvFgPfm2cxeE4AcIm143eLKD
Mx/77EqPcPtfhNObjZ6zIZn/29eHHqu9ZIHqFB04L5xQEKIlk6exi7xuxxnl
nD8HodEGXYI/1UmdqpWyBxAytpjFoG00v6POJTT8hZAWn6UpjiR/paCDWf4H
gv0O7xicS3/s35X3KvOq/37cJIcvkBf2OoWEUoSXjpk1pTL59FQDo8tAqNrC
OyJHyUtOdCqzuxH07/HsnqH0pfduRxgr49ixW+RXYnuksKMIPdO8feAeubO6
Qkn+EsG8w2TfNUl+LaRDWvP1o3MOp31FxLUqNZ8ivPGLWdQy5BOpncyoWl97
BtnYneTPHXZJFYWP7j2VPD+8knlNzRnAGnSnY8lNLd2MVq3vyud1rlXkFuxi
CvIQLjfwnq1e55kS1q28fAjBWW1it8fQfOcTVcoDHmF7jtGxeTV58uIlaZ8V
YbgPNW3B5Okr3Up0DkLoTZNnjVcel6We+Vj1Od4qO/185u9HOFZslgdupi/t
t4NqX+Vn2VMmyPVzjcrzas5vo2yOkAiq09beIkiHEbb2GzTTyeRDRZVS5GcI
z/5p1pQYfdYtQGgeNcmDe31yuvTQ1MSJAWnkjqFm6W6LHjgXLye9RZ7yTp0U
2qgHfY/N0bfH59xOIhzI5DzJX5Brr7UyF1T/5CuTJuoI+Uz8j8yNBoS/3Rbx
tlfO4Q3lUq5HvRdTlhyj9XnXMwi6DqMj3qv/H97vIkJEKy8m9pKPyxeVo+p7
96+wOqA/fWlO9X+4m8uxBf5Uv2vfVcl9H2H9C0Z2f1TG0j5X103o5tlLG8jn
5zqF8UAOxrMMjqdmqX5U3k8Kq3rRRl6e9Oq3dYWXld3q//D2opn9+T75i2sv
KlUBHMTMc7rBefKkd2sF63IOThXZdCv+IT+e9KtUdk/9b+tNcv46yvMfEzkN
2w==
     "], CompressedData["
1:eJxl1G1MU1cYB3BWnTJUrG4uxGh86UAWRaxmKvZMD76ELLwVHUY3ZMvtYSMZ
c6IORW5AJVtDUEtHNgdVKMVAFQfFlhbtBYsUBAoiHb5k+AK3MUazIgiOuF23
nZA7Huo+3C+/nDz53+f+z13CfLM9ReLn5xdJnyn0yfv2AqvpJBinp/F5l6Md
rRVW5Vvpcod8vx1J6gjubzTzDjd4e5eL2/crwf7qB/zAJLe/MiLTKMHofiYf
MTNmwke89UjuJnhxwRAzLQI8wcJxHS6Cd/VNUa2JBi962i6U3yZ4/cZ/+MZ1
4AvVTULiXYJTXyzy6GLAHyuqhdCnBEuDCpjgOPBPv7guuD0EK3+fpTq0E/zL
hhsovJtgY8YAo98cO+GXV7jYtB6CC1xvq0YT4XzkprPISv2o3stHZYLbzDXI
//Z/7wVzHg1bhKN0/q4j2Ux1OPiYqYv9sI3grc5Q1Z0+mKO++QuraCC4s/Iu
T8rB42c7uIx7BOv5QUY5D+Y0B9hYUkvwxdQgT+p52H/euU4uulbcQwl4XaAZ
Waw05+qL/EkNeNG2LiHeRr+7e5gPbAFfntuCptWIe3sX8sT+dI6dW0bwe+Ff
McfugzelXGGlBoJN0wt5zyzI+XClnjtI8yzQHWbkUvD4/rPsFTPBQ7dO8Qvm
TtrPjB72CUfwOwHXea8F5i9/0IYumcW9KeB8/kftXKlRPE9iffemF/e/KG7C
XfvbOGcFwTE9a8vze+N8e0Lnp0nHDOpkcJ2mVRhrIvh7u9OwJgu8KskoVF0j
+PnHK2TF2jjfPjcTPJh0wFAfEj/he2Y4hRA6f3QoxeA/Ffz9iE6UbCL488B0
5u8kcM36q5zuktj/SvCc5lKkdhI8NW267I994CM/1KHv2gm+WTRbFfYb5KmJ
LhEqad8yFr7pUUTB+XlHzFyZ/f95XpU2sxG0J7jbxEh2gD/pvyCw58V9fgae
P9jCjVSJcyzg4/eCztm488elJevAszIr0EPacyH5JR9ZDzmfdeuFw7SHFb3B
nqCZcH78HtWIfU4G/+vPVvYR7VvbiTdkmWXgYaHX0CfFBGcvcxs8XvDdTR1C
tlH8LtZJ+edXsh6af5V82BCQ81pO2lvjAT1fuBg8d8DGbqI5N9jmy2Qq8PCu
RlRN93Nv28+GJBt44fF6bgu9Lxn9Z+YES5S+96KIYB2fnhAWAr7bW8Xtpb1t
KI7VnlQofftJc0qsuXOyVoGnBLlRH/WwrK+1mpXg4/83ujft6Q9qHWvBx+8F
3cOtQ9kJkhzwl4kdrPY0/b/Zo7TSXvB/ARhaEh0=
     "], CompressedData["
1:eJxdlHtMk1cYxsslKLE4hphBAeFrAQsVxmjLUJyer8WNjfAJjMvXCoURAWFc
jQhBR5AhMmwHjTBRUFpuEslYh8rAGXy5DIGxIyMOnCzhMmIwYwPn0A1cWJOP
8OH+OP/88uY5z3neJ4dIyAxPNOVwOAHGY2Y8c3HmmktaGbzcl4VLd8aigeaO
UMvst4DD+UDDm5DBaU0GHkthefURpdVnHjKwE+dRT1JZfkcdpgm5TEKePAd7
XmC5Xcs49/brMpCMnsaxmOUV95Kt9o6QAKpWyq6U5eqffDRZVSTcfHgGr91g
uVCQp7mWYeSTvRR3gOUgGlEPqkhIc6jAZdMsX5pdUDeJSZgXVOE9m+4Nfe6p
eea2rt+gQks3Hc/mBlsyPsNIsK47S12KVKGI7HfJtseuUNHvrtlTRkLhRDLO
b2F1DBZCK2kSCajtGI5MYPloc7pVh4iEOx3p+EUdyx/si7ey8CBB19OMG4pZ
7niFsip/RELLShXeYqfa4DEO97nnvGVgbhzQPGPnt2pXuap6GRi0Q9TR3Szv
v9uttlPLGP/v/C+HGzIo3VFN/bZpv6UH/uXaJsmZ/f4c86ofXiDU5n6JVzVH
Nvg8taKObA4El3up1N5Q5av6HwZChE0BlbSi2OCu3hzN2LIcaPNb2HtIgbxy
y012hAkhKKGI1714ADqHO6nBy+z8dOq4/VRcAHTyT+FrNqx+UN8WB/mkP/jM
lGC9luV0WTJPVeYHMVQbHp9Qoqb+tB8dfN+EQR6XVzcshUZDLY7rUaLFtJPk
6Kee0KnV2+c3SqB46Coln1KitZlUMogrgjz7Bl5NpRhGSiqozjFW/6F7HG/0
uC/T83aWxyckSv50EjF7HGH5tEu2ZCFGwPStRIkEnOP6k5+7QbxOKZ634MPf
wfl4JEiJDjUeJfN3ukEh6SjNcuLDia+K8CMnJYq+fpEoEXpCYZeXX7icD65d
emzyDZuPIaRbomvig+3CXRzStjm3VIntdj5wI9XU0wIFOshPmflnQgSFZrv9
8iUE05NMBaqZDCdd3xOAYev34jK1Czh+kk1pzygQfSpn5v1tBMD2WnH9qAu4
ZLZgBa1AFlGtpi8CnYGT+LZ4xZKA6l9v41Z/BRr6oqgnd9UV0K466ZyBgMH9
FylrcwUKaC/XN23zAM4hB7/CW3xmv7M0yvzjY5OV30WAbGok7UI+WNcP4KZF
Gg3vD+nJCRWCT1SfpLeKYPw/ptFhecTMfYmAySeWYPq8TKOIwvO9C+lOoAt4
Io6yJ2Ap7jvqyiSN+iXDpgerdoHhtSHp9ZcEPOgFLKygEU9X8JH8W+N7ghek
1V18xmcxjWb7ok2mnIVgvbbim+CznidFI6/zefrMTDfjvyeUpv5CQExzFtVx
mEYn4ip7fkhxAR1a9D32NcH8Yxk08nnqLi+oMfp5vuyLgAB1rJa6EEGjwQaR
fDaZB5y/BBL/Sj6T/xs0Es7ZmQ2HO0N8RorU1X29J+PRyLsmvCfyKh/+AxdX
l8Q=
     "], CompressedData["
1:eJxTTMoPSmViYGCQAGJmIHZYmHjNoIPvwDZej3TXHWkOx5ZtC+AsNDzg8PZ1
akOD8IEPi0LSpZYixBmyGy4FJHMcOHUm4TnjXCTxY68WxKQ8tGdwCV0uZ5yO
ED+kMN9N4Mp+sDmKSOIPyuROF661bzhkki7xDMkccyMT5/4X+1VKfdQfL0aI
H7BTub7iE/uBqAPx6gJ9CPEGtQfXPR5xHZjhkqT+cAqSuNzWywptvAdu5Saq
syGZ02Bjl30iUfTAgf1By31zkMyP4L3MEc5z4Ng6j+WeSOYzTJqxoO397f0J
60PVeRrSHP7Z5DluUdQ70CDZZnL+G6vDrnDH9LfbkMz/eii4LuOf/TKHtPSJ
j5HEp8ikyen/sQeHswAiHA44Psq4YSlxIM3ZQz1mKkJ9gsSUTBNPyQOf3APT
8yYgufP0iSyWHLEDHIHJzy/NT3NwlM5/qP9Q9wBDcXTOkjbRA0oX/NX7geGw
XShcUT1A/YADy/HUOymiBzRSnNTv9wLdPynT8TG37oEDka+ybLxEIPFegWT+
1SsZGjJCB9jWpD2vK0AKB745N15c5D+gF2yhfrs6zcFsRttDZQu1AwDJNwUm

     "], CompressedData["
1:eJxNlH1QFGUcx09QAuVFBoZJQfLuoAVCBoVuFGh49GL3dhmVIO/MwAnOY3ev
XV4SJ7ocJzgMmRPGQVGmtOOwXJAJFDRL3n4XozIDoUBNKAmKylVXYGAEAWM7
wbT98fzzmWe+3+/v+7zIs3JTDS4ymSxaXK7iujVC+oXVMRB5P4NW+/Lo5oWv
UjzyN0OzlbS4X2NgV5xK+Ot/POcimbxRYIBp09PgKfEsf7zBLu4/vi5BKFgl
cZWTGrw7wkBYZxJm8ZZ4B0GYDc+Wff/k/uPZXuS0uxsLvQH7HPWTEj9hIV01
M8t5fpd4VDk+vHItC/f4TMztR4kPBZOWhkfLefol/n4aHvPQhYVjt3cIvY0S
/24iybJ/koG+Vq1j8Z7Ed+fgJyOnGdg/rHLM35L4t834PB3Aguz1PUKwhUPO
tsM2lTEcMs5r3jWKeaIwHe38lEOBU8aH85VRcHYTGZMizvVznBq73iLpvHcV
dxr8WPg4AhcKeyT+k1KjPyvOuzXWIFg/l7gxkRrc8AoLqlaSjhd7KM4tsn2i
DYXRMCK+fBsL0Jkq7JzlED1C2KsUCvhhHdVyPYSFYnozzYk9F9zMyqxPVYA2
m3L6KFnYqIt1RPzCofNVHxa9laQEniIO6kNZ6FivFeaGONTXbbb1BoVCWSkZ
2BrOgvsbesdAl5TnXx0fFoyZ79D+bRz6wJZrd/87EhZ6SPPMyuW5upZ9K0Ng
dxblahb7j7ubKUyL8+bVUfLLk0rQGPEG6wQDvfkZjj3dou8+w4qcQTk0eRKP
BlawkDK6RUi2c+haZ7687mgILPQTyclTDPw6moh5N3FoMfyIPBjHIKSECCz1
Zpd0ajg0WJBjnxyPhPp4oqfjDgOxATtpRzuHdIuH5av8FHBqAVdbyxiozlM7
7kTy6PsIZdeBbf7AXCD1J40MVHRsFbqP8+gjVcrRx3IZ+BQS+gdvMjCjImhj
BY9kTf3RJYdGO7+Mpfzc3maWzqVc5Gcmb88fGkg8nU4GpucycEL/qhBULfLq
9kZdpz3xcSmlHFcwkDW3C7si6iCtt7Oq57fEvjFy/kojDdpawqEz86hmvcZ0
4w8XdCkmWVlbTUPjFyrsSTGPZhOemcy+HujJHJ5mO0ZDtlqDpZfx6OsX4tqf
F/milzdoLL7naPgsZi92/zSP9m5XvTb+0lr0NJxKm6ihoaJS5xgq4VH0qQxT
Ur0XKvwGH5yy0ku95Ym+qz1NzpY16EUfarr2Ig2zw2q6w8CjuudmE7R7I+sW
zZrtV+mld6oXfb0Omm48WI3GNuF+R8bopXtbIOa0XTZdavZCYW1411N38R84
sAMbPSf2Ge1hCkrwQv8AlH0hyQ==
     "], CompressedData["
1:eJxdlH1MU1cYxosymMEYwphDrR/g14IFwY9J1lVfZp06zz1bNmWuLToQJ2rp
RGuF2RjJGlkJtTiKina6Co6V4Rhfoy4ZXtQ4JORYTEPMVjYxXZgD0nmuc24u
cTfrdefKH+efX948ec5znvck53/w1vYJCoVipXgmisdl9NMTL2GIVn6KHY8M
cO3zb96cVJzJ3y+tpH0hDkaLjpJAYu7/fN6Al2paMbQfvoTn3Gfz9a4OuqKf
g5O3S/FZwvjVufeoOQ5DyHmOBB8yPjoyQ6hRY8iabiHPDDK+0dFLp3dyUJl7
DFcHGXeHfbTuVw4M+CsyEGa8b8MATczh4L2a9/FeJfPZVDJX6FnJwZ7tdrLk
Bcb/MUULHgcH/v1HsNnJdAzJ39FdZg7MrVfwcLmMW3k6oJbmL8n8P6ijPEVg
nFFFKpKY/sYzAbolQcwhrZ28vZBxrSVMu8oRZM3sxAk3ZHlmXqBeO4LEu4dw
dohxszJGeMeD4KHQiceqGL+aMEwzbiMouPMZWcAxXjB1ubDqAoLoG/nk1uuM
j1Ycp/GAgN/yJU56cZxOPALFx41YY2Lc2j1BGFmPYLPhAJ5SK9NvXCg4dQi+
+LuGxJ6U6fSM0WddCJTzm0lL3jg/RQiatE7SPIvxwM89tGAbAqvDRG5eZ3lO
XhSkx9YgKFSdIqSNcWP9eWqxIIg/d42cb2A8VLhUsHsRQIsX57tlPVFcocNt
CNyp+/DaDsZtm/6g6mEErtpuMvGm7B1/qaXWAwhs18/g1bJeBUkXnZOFQHXC
Qf66I+vD4BpBHyvl3CrTeW22ELVays3LeOWtQbr2XQQZQ0eIp1+2L6EMoaQM
RfbLZYC9dUUe/9Z03vbGPppSjWCZ30pycwwwu9SUfXHd4gjfJuUP4/ZlBYL6
r91ka7+e5d/RTL/NROBLOUgaLuuf7vNBKf9u2Xx8G11w90n+jAde7qP+VA7m
XfSQqGY9lPpMec/vT4vs7wiCqoYKrBbnU2y7h7rKVfwrwQ/ppgdP+sN0/uM5
CPYU9uJVZYy3x7jo4x2in+VNWNjJuE07Qv88LemrGa+3pwmTfxP3zlJNLEsY
1/ZTmhqW+qDVA8Ttyh6LSY/oxHGR+RQ9/H6oaOjszjRe+WonHQuIPTEbcfg5
PayfVhxVuDmdN9bOFDY4pb7Fynw+ihMCvJhnrw/3NOrYvTQK4Yd7CJJ+7CCT
Tuue7r9G/DdKvieHvYy78tYJxsdSDy/r4LiiOC951qJIb5dKPlt14J6626Oy
qyL/QDeK6LToYMpPpjKfZjHftGOaYPsIAVr2CTaZmP6/HJjRxw==
     "], CompressedData["

1:eJxd1HtQTXsUB/BD4zc1gzFmmDtNYzzSvtOYxiUhepB+uVSjGB3W6TidHrtO
qcM1ontuyNgYb5GGQUq2EQ7dK68jS9gok8b7cRM12cLcMdcjjNee7LFO54/9
z+eP9Vt7/b7rN8Sal5je02AwhGmfl/YFvj3GzAGAfn0mqEVDsyOVAzUzfBb8
hguPpkiKCNhkmakmfLL99OcJJcrtHMCJw0De1Uo+ck0FO1oMWGqPUptc5P+1
r1H8d+p1yskjA1KVynzA56FRwpll5E2L0pllH+Dm1DGyn4N8YMpSvmUL4M1e
M9TKteQBh06ymh2AgT4Rwuil5K71hzmWANZft6g9hpPfrjUz782AI5qTxajx
bv2fvMxtpYAfnFa5McHWfQ5OQN/McDUIyE1xG6S6LL2faPInAzJ42j1APJ8o
xy0i//B/CXvQChi/fbxcUUT+7H6BZO8AfP3HKMGcSR4Ufoixd4CDk4LVwGSP
c31MP/qJIS8PsXC1Uz83kvzfhhzuegJY6ztb/hhL/im7moc9BnwfEiParOSJ
efuk+nOAl3xi5Xd73O7LqEi5hYA5LFnMbCA3em2TfFMBQwvNckwbuc03T1ps
BfROSFVv3iK39itXGrO1nEyxCk8vkX8+UcXbTYAlDVx1HPeY2zRAadXvsv8p
8pprO9g/sdq5D1LkN05yP/+N0m4A3DPaKDS79T/FblLicgF/TZsstPzlkec0
wERjvOpcT16WeZEdywDMrZojugrIDYZKvkGrHx8aIneuIB+Uu1qK1v53XHC6
vNft3lvnzeO9zVqevUfJ9nzy3rOyWbNF72cBuSN4HWsp1vvnHnnQ7mV5XbD4
S1/y90NO8+039P1y84KzeUrBQa3++WhhXX+3/co/IOVUaPMM5PISL/K5DqdS
KAHu7DALY/qRb71Sp1SV6fl5m/XTFVspP1Wv57OdfL/zT2l6G+BVIU090kz+
YtcmxfFIz9XdrO65agSc+ypS/XaHvOxVBo+4oO9dG3k1W6nI1YAP56cI7BH5
VGsxH3gZcOPWJPX+VfKufdHqvGiJEPr+7dHPG8AgIUl8WezRDzPp7w951158
0d83O3nXu/RRz7PRbQ7VLmbsZcJaPlbsmEXetXdfARvPzla/8Kzuc36t5z+O
vKhzL3/Zx4Suz2HipHDy71EHxiM=
     "], CompressedData["
1:eJxd0n1ME2ccB3AERSRqdFtwI0gCkl5jKk4pLyK4H22xgvblThQnL+WweGom
OEXWEhVExVQBE0NwyluohIuZOIKNEmPwJKhN07hNDTGamriJp2ETvCOMEwRJ
Tvmhfzz/fPLk+/ye7/NE5BdRBf5+fn7xUytgahmVzfZvPGbgBmKYZLUV7rZd
M8/7eRW3+vQFqXkdCdamjURQOHpTiUbylpMw+lTLdMei1xhzJNXU/uUJNDO4
GH2/67zUqyOhq1PHnJ/cMe0TjnIp9AAJntEU9u0wekisUbp7kgTuFsUahtCv
vHFK7WMkqHw5jNaA+Q966+yBBRQkHsll9cfQ7/+SLZEuCnKfxvFjReihUTqp
opWC2qMG/lEF+pWEBmmLk4KwBWv5igszckob7bmFFCQty2LrZ+zfHpAuTY59
vG/7jH64tVLxXArKe9TMt23oE5U/2BdGfDy3Dt3fXiL1NZPgJqx8uwP9lIWR
9tnNcs9pX+THm+HX5gKiekbPZ+vP2Z9XmqHquyS2eBZ6z/ABKZUyw7sMCxv5
FvuspTeIP02a5Hnuo7e++F60/TXlinReuR/90G1/ccBhguF/DUyPHl1tDBbD
c0ww5MxgQuegX7YtE93RJnjsthKdf+RPu3XRVUHx2gjUNiP/uwt9fEGZENZp
hNHgnWypE90VWCtMsgZ4laglbvyGHtV3SUiO3ARB5A7+wVX046954bRrozzn
RfTaew+FgJp0ubfD6Ic6RgX2WRo01GQRjiz04rBAMTMiDYJHLLzChJ7tSxWz
lqTJ+ZvRvdf/EXq7Nsjz6PNhzfyilje7VdzNMxNCVNN6uecnNM5/drUYfTAV
Ng0lsaZ6+vP7/q+DkTg9s6cUfbxwttji00HknybijI2GBu0+umylitOVDArd
eh0cWZrA9O6koantxNFGi5Ir9p4SQlK08n9YQUNMyl5ycPZKrtWxQpzv0cBW
p57P/Brz1RM1gs+rgdzgH4mu8bxpz6j2CKHnNFC5fD1rE79wvQbcm1PZxvd5
UDqccfukVcHdVI8JXVs1kF2QTVh9uN/GDrxg6pLl903Ec5XXq/rZujXyPyfR
XxnD+ueQCeDx5vGzdtOf54zEy/9nF/rj6nUvAyrj5Hcpo6HKsLflq79VnHuP
pf/gxVi5z8JPruB2dStf3umIgfDOeL4vFj0o+mH/sY5VcCMzhfkvBPM/ALTO
d2U=
     
     "], {{-248.385491983, -72.0095104, -5.470547720000003}, {-242.94885184, \
-75.05551559999999, -3.281848}, {-228.71219219000002`, -73.7045101, \
-3.007248920000002}, {-219.71229138, -69.7845119, -1.4727488000000015`}, \
{-212.53299107, -65.16350969999999, 
     0.6109513799999995}, {-208.34589161000002`, -61.53651079999999, 
     3.3638524600000004`}, {-205.97799076, -59.25051529999999, 
     5.807051619999999}}, CompressedData["
1:eJw10GtMUwccBfCrdeVhcFD7uO14VFiHsgmiTJkMei1LBTYmLQ9RS2mhZYU5
awI4IEQppBcfDNESkoEE0M1gfLV+2DSO9qwtV6OiosxNbIgWjIDoEPCxOLI1
IX44X37555zkv6LIqNQvJggiyheWL7UXN4823yrCknP6kK/ZalRcOKp+FhZF
ZVxLa1CJi6DN1CtIvQrjOknfcJKIqm9IXxd7SYv1BYaQlAPbQUV/PPHHyCMp
ryafFdegQbiw1Lb67FbsrrLIBg4uh+lzjasqToOnfJPNXpyL8cmA1OtdfLBd
l+gfJYUYXG1WbF+ZjTdPjebGE8vQY3CxrXlq/Duza3CXXQEyNo1Wb16ED+OP
MQquGt8E1xzRnc8Csa92bevAkGPH+4UfBV4uwJjypDf4diauZgTRneEEVJk/
0M5tKiQm2Ysu8DIw/cEDmZMnRPdUiVy6ageypoKKv2+TY7/HqO1IEONieyXz
2rENrap+7wZbKoZioly6zyIWeqrzkZjyn9feSKHq1yWp1zaF4qszTXL7gzyk
se662ywbQR6PSe118xd6/PJAmUqYI/MbkPaPRVYWGoLxyAqa1OSiLtnj3tf+
KXLu2WRV6Rz8ZSqXc8tyYJi19OevisfDc/edw0Ih5no72fHubKzRftfUqYtD
AjXvpH+JQJnISO+RKSEWVDRVlktwL8It+3YiDEevOJnTVgVw/wXPcjYMCc8E
Lr8bXHiu75T/lqWAuKtAeN7DATF42lz/Nwuf9DczPT0KEKGVwhPDJIJHrIHR
X751zMTVMzdaFOjOSuQbowXA0ln+q/hRBzncSr885vOxGL7jgBCaDruZs2Ix
7kz/zty2v3MR/Hc+N+feDEBZmJXdMPfOw0F61tDpl5dhyK5m+/sr0b11PXn4
z3AYYkfNbzRLkeIpZeYJJR4e6hMU/hQKzQsO6fQ8X9jl+u4HtvCLJSJoeism
T1WPSTmCOvlEpBLE606eX5sQxNTPTx5PjEkjnxxnTumVC7sBAlj7vS8N66al
kx2HmdpZJepka2NL9EEI1lXPcSRvpfmsVlpUnu37w0wMM7cIu7WHargtgdTe
90qZyEaf39yTZEsecXxhVie/2h9CeZtN9NV2n7eITzZ3jUjrSjf1ZefwqP8B
bHSacw==
     "], CompressedData["
1:eJxTTMoPSmViYGCQA2JmIFZ94vlZ+UnygfOSaybn3S1wOLZsWwBnoeGBWcc9
JscFJx84c37T5GNRBQ4O6tovr957aM+T63V4VlHygYT1oeo8a/IdJGbfclI9
InogwcxbeEFz8oF5xhHqd4UQ4m4z3BermyYf+FBspB43J8+hxzd3odAjhQOf
GN2Vd6snH9gV7pj+dlaeg4HZ1lavDuYDbU1ezqfEMMVvdbl/FnyQdCDuttnz
3915cHeyn/TZfMo88cCehVbpUyNz4e7MuOlpzLMg4cAn98D0vC85cHGB7c6H
lSQTDkxINl0uswAhbic1Q22bffwBnbux6c5nc+HmP71R1VawMvYA08vA5UX7
ch1epKjuvWUt5XB5XxwbR0fsgQh3l+erlfLg4vebtj27cSr2wI/bzun71iLU
GzPudxPSjzswo8D5+QULhLi6bXqa45tYDHGY+g/nTNW55iLEYe4Bu5MRYe/E
qCI1c9fYA18meqWLvUaI6yeHJE+elHDg4OYZxttYEPHL05P4+drRBIi9d/Lh
4Xz5W8hnxtbEAwE5qyZLcBbA47FB1nOyzK3EAx4sM4N3lCPE/fPcJuvwJh1Y
o7zoc+hVhLhTmtthoR2JB1bVLf3MmFYIF9+1KXTyR4fEA7UOC4w7BYrg4l6X
TCe/D0w8wBy2udh+FkL8ycdIZ77liQdmWqzY7MlYDBfnsfL6rPg68cDsu0s2
zzVBiAMADpFRSw==
     "], CompressedData["
1:eJwlkmtIUwEYhtfmZeksc9NEM7TQVZiaSYmafKntciRceclL5HEXjzvnNEkj
CwlFOaaWaUlUFMvAOlF0k6BJ5j6cgqlQWRiVLXXWiTTIjC6WkbAfz7/3x8v7
vBH68r0msUgkCltCskTkJNHaJGNxjV+yUJdEwuH2yseD1GpIziMyxxcY7DNm
8VezSUh49DFFNLcK1k1pa774s9i2PUeI1pFAum4cC1nnDUMuzUywksV/1nx+
qJ0EUfGAokLlsnO5muTr+1lsfJrGj2wrga8jHo7uJDlOnFa/tVpY/Pu7iD/S
UwKdlWLHCYUc47u18/2bWYw/pKPaU/UwkRTO9Yl98Wi9+ordyeD3MwQVxOvh
09AbjmZkOJylzq65z2DK+iL+klMPv/b5OrpC5fikiqjvsi3lZ3dTfS/00N8d
4PCKCcIFsYZvaWawjtpCsZ4GsHGidIl6NbKT6vKHmxicGt0iFFgM4BHL9/FR
cmzp0RY3f6YxZ5EQJM8M0Fi4yI0bpbjNRkhKXLS7p5cR8nNiuQ0nPdFyU5sZ
fptG6R6DMMoY4V70YZmp/5/9Y5S2aKCCxrIeA4U2I9iiSO7aWyn+kKjPzyXR
ODRCCst2mqDtm5J7meiH/tO7hlUbabcXiwkuu9am3/H0xw6rqpL/acbEBBN/
RVoKsKjgTIErMd9XPZM+ZXbvSZZC3IZALsPbGxWdRHXHmBlDylKFGL4U/AVC
FmpbtIteqdanUDRat+Yr39EUJD7/yYVRHth7XPXwQiSD0XWF1PlpCkRcUEPD
gASDgMj6MMag5VYB1eMsg8YH8Q3O1uXoeK+RnKpgkbybq5S1mWFCdy5NXxyA
hxTapioni2fHdULtH7PbY50vxtVrektzDrp/VUODZtaHi9jhhV91gwUr8ixo
tGYqpWIGaqMUnM+0Nx6o1sznysrR1pVBXSxiIPh1MGeJ88T/wOVDng==
     
     "], CompressedData["
1:eJwBsQJO/SFib1JlAgAAABwAAAADAAAAQCZjxqUHWMBiQrOINK5iwLA73Xni
KQRAIriAhu14V8AbTrI4sHxiwLBBzfNUhfc/ojZgRucnV8AwTrZgrVViwIDv
afOkgf4/YD/EBouoVcBMkbbQWQ9iwBCntHpenARATKyMRr4LVcCwc7JYE+Nh
wOAOrPQkyvU/SGKTRhZFVMBUB7PooYthwICowAtT0v2/lBG8xlM/U8AqfbZI
mWZhwMRgq8Ju4RXAUkB/Rg5JUsAlV7H4LUZhwG5QwQIUDh/A1L5eBghYUcCg
n7FI9hVhwKRzAsOH1BrARHBcxk12UMCbKLZAStlgwIDkxsJKKBXA9NdkjXqs
TsB+hbP44F1gwCixMIZqSQ3A0KMsjalpTMA4hbYYsw9gwBgrMIWDvATAFBcl
jXYWS8AYTmdhbtNfwFi05oVDmAnAFBpmDYPoR8AmvGfReedewJAGSobzGwbA
RHABDdvxRsAW9GJRJodewLDlUoXUpwjAwCvMjMgeRsBjs2XxSVBewJiRUIbs
vALAJDFBDd+HRMDzKGxxE8ldwKBo7IXhhwHAdCpjjcR4QsDZ/GQxVlZdwBBR
KoZQGgTAvIkQDUEoQcBgqGhRBB5dwLh++YXTyQTAKDTMGgbRP8A+2WLx+gRd
wBCVoYVfJQ3ASMMHG0M7PMCOo2IxZOBcwJT/sEIdGBTAaPG9GvtZOsAmfWtx
V/9cwCyx50IXxhPAEBx1GaMgOsCFAGQR2P1cwHAlrkJOIBDAWOVqGspxOMA0
0GMxPUddwGCxXQyr6fe/MLe0GhITOMCFwWextRFdwIDWIpon9Mg/AGEZG7oZ
N8Dtz2ZRL+1cwHDfjPVoVfE/wCCOGrjONMCaOWbRotNcwNDcXvMmhvM/QN+Z
GrKNMcC+7GSRImxcwABYbeXC1Ji/34hD9w==
     "], CompressedData["
1:eJxTTMoPSmViYGAQBGJmIO72PLlnfkmew7ndYc//TktycGIpcFR21jsAE1cp
9VF/PD3JYUFZ1sFZa/QOPLde90ejLNfhwGvjdNsDSQ462sx71R6JOvBvn1cz
9Wqug9IFf/V+hWSHhsOzRbLCXuwPXbxpz7GtuQ5N6YbpOZ7JDgpLuG2XTBBy
SJW4ZHP7c57Dv3kRy0+ppzj8MN6+wNPG4IBh0W4bJtM8Bz8rs+XfPVMcJtwK
3LtRXsoh8u3qPXlT8hwO7A9a7rsBqP6tW9WaO+wOJ8+e3lMQnueQlZiQLtKT
4pAiLbz3+W1Jh+Ma5/fIAN1/6kzCc8alKQ4mGYy2jW3iDomhe/+c681zmNMX
rd55PsWhQVja9sQOcYe1jEv//N+Y5xC2yP15uHiqw4bCKza8E8UcdDUO2URd
ynMwKgxInxyX6vDjRpmtq4WoQ/SkFXsO3c6D+Dcn1eGLk+DeoHYxh+B/W/cU
PctzmJBsulymItVhTpraXpF4AYdGm901r7/nOby6b6/OVw803+x61QVRVgf3
5etqxPjzHS4kBD8PXJbqwPDf+/nfuof2AGnVu2Y=
     
     "], {{-177.48389210000002`, -87.54151569999999, 
     3.5584516099999988`}, {-176.89939274, -78.5125164, -5.441548390000001}, \
{-172.43289341000002`, -64.8045162, -8.441548390000001}, \
{-166.49439396000002`, -47.08451499999998, -2.5711489100000016`}, \
{-164.00589146000002`, -38.7925075, -1.0858488500000014`}, {-170.35629429, \
-31.605511000000007`, 3.067252119999999}, {-176.23889317, -26.0425075, 
     5.907952269999999}, {-178.80189289, -25.71351279999999, 
     9.558451609999999}, {-180.35159077000003`, -25.197506299999986`, 
     9.558451609999999}, {-180.87819065000002`, -25.197506299999986`, 
     9.558451609999999}, {-185.14569248, -23.640514699999983`, \
-2.4415483900000012`}}, CompressedData["
1:eJwBwQE+/iFib1JlAgAAABIAAAADAAAAkDwWNl5FLcATjaSTm9tyQPS9lsJJ
mxfAoIXiM34KJMC31awzXoFyQGw0HEO+vxPAYLOEa6TbHcB4UaozjSZyQMCp
SIWx3QzAgC5CZ4gBEsBDFaNTvMlxQNC/VYWjHwHAACh+jLnr1T99QKAziXRx
QOCcc4WxTALAQDwSL0+3DUAAoqpTjzNxQFi8BIYwtwnAQKfyLPeoDUBlZrDz
gBxxQOBKXIWcQA/AgOFKLN95D0CqfqXzAQhxQLCnFEOL+xHAYE7VmGt8EUCV
hJ+TmQhxQDgxj8IWVxLAICRal7/fE0AdP6/To/lwQBD6XoWMRgrAoGuBmN9k
FkAnHZvT+/RwQIgbjIXf7QHAQK0Tl+PlE0Ceka3TTQNxQIhdZ4UaPADAAPJj
JxcuDUC1MLAzChJxQKDKP4bQUQbAAKJPPwOF6b+W7q6zoU5xQATYskKybBDA
QI/aaRBDGsD87aEz37JxQGT7LEPaahHA4GpqNBQOIcCSOqaT8R1yQGjXF4U0
DQ7AwA6cM6IQKMBlZrDzgJhyQCCiVAyhNPi/cPFRNTAoL8BMIrGTcPByQACf
7QvHh/2/k0zEgw==
     "]},
    VertexColors->{{
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}, {
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0], 
       GrayLevel[0]}}], SphereBox[{0, 0, 0}, 10]},
  Axes->True,
  AxesEdge->{{-1, -1}, {-1, 1}, {1, 1}},
  AxesLabel->{
    FormBox["\"x (\[Mu]m)   \"", TraditionalForm], 
    FormBox["\"y (\[Mu]m)  \"", TraditionalForm], 
    FormBox["\"  z (\[Mu]m)   \"", TraditionalForm]},
  BaseStyle->{FontSize -> 14},
  Ticks->{{{0, 
      FormBox["0", TraditionalForm]}, {100, 
      FormBox["100", TraditionalForm]}, {200, 
      FormBox["200", TraditionalForm]}, {300, 
      FormBox["300", TraditionalForm]}, {400, 
      FormBox["400", TraditionalForm]}, {500, 
      FormBox["500", TraditionalForm]}}, {{0, 
      FormBox["0", TraditionalForm]}, {100, 
      FormBox["100", TraditionalForm]}, {200, 
      FormBox["200", TraditionalForm]}, {300, 
      FormBox["300", TraditionalForm]}, {400, 
      FormBox["400", TraditionalForm]}, {500, 
      FormBox["500", TraditionalForm]}}, {{75, 
      FormBox["75", TraditionalForm]}, {110, 
      FormBox["110", TraditionalForm]}}},
  ViewPoint->{1.4907995483594878`, -2.4540507460308554`, 1.7932266009951316`},
  
  ViewVertical->{-0.009458232476703991, 0.010203631502068773`, 
   0.9999032091870627}]], "Output",
 CellChangeTimes->{
  3.802991284781334*^9, 3.8030387450279703`*^9, 3.8032217466729593`*^9, 
   3.803479109911014*^9, {3.803493650261567*^9, 3.8034936624017982`*^9}, {
   3.8035070312614527`*^9, 3.803507077786368*^9}, 3.8035508837879343`*^9, 
   3.803556430052672*^9, 3.803637427288075*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"783e7e05-dc22-4a06-abc2-144caeaec5ea"]
}, Open  ]],

Cell["\<\
The following block generates angles from the positions. The angles are \
between movement vectors and vectors from cell positions to the parasite; \
each angle can easily be classified as approaching the parasite (acute) or \
leaving (obtuse), which is why they are used for assessing bias. 

IMPORTANT: multiple errors stating \[OpenCurlyDoubleQuote]ArcTan: \
Indeterminate expression ArcTan[0., 0.] encountered.\[CloseCurlyDoubleQuote] \
may appear, followed by a general error stating that there are even more \
ArcTan errors. This is normal behavior resulting from missing data points and \
the resulting errors are subsequently dealt with in the same code. 
(The complete procedure is that if a cell\[CloseCurlyQuote]s positions are \
not recorded between two times at which the positions are recorded, the empty \
times are replaced by duplicate positions, which intentionally cause an \
ArcTan error that places an \[OpenCurlyDoubleQuote]Indeterminate\
\[CloseCurlyDoubleQuote] value in the code, which is then removed by the same \
code. The error is used to circumvent missing data, essentially.)\
\>", "Text",
 CellChangeTimes->{{3.7998370323124037`*^9, 3.799837036413165*^9}, {
   3.799925738672845*^9, 3.799925814239357*^9}, {3.799962224417304*^9, 
   3.799962325733511*^9}, {3.800014410564314*^9, 3.800014445605645*^9}, {
   3.800014475908214*^9, 3.800014536327649*^9}, {3.800024097050384*^9, 
   3.8000241562314377`*^9}, {3.8000243097930717`*^9, 
   3.8000243622566757`*^9}, {3.800431402256652*^9, 3.80043191290609*^9}, 
   3.800441949074527*^9, {3.8004420424247293`*^9, 3.800442206876392*^9}, 
   3.800452996616959*^9, 
   3.801822437849676*^9},ExpressionUUID->"b795a9d3-1fd0-4143-9248-\
c85b3865a1f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataangles", " ", "=", " ", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Apply", "[", 
            RowBox[{"VectorAngle", ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{"Differences", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}]}], "}"}]}],
                 "]"}], ",", "1"}], "]"}]}], "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], "-", "1"}], ")"}]}], 
            "}"}]}], "]"}], ")"}], "&"}], ",", " ", "dataadjusted"}], "]"}], 
     ",", "Indeterminate", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.795133278099145*^9, 3.7951333126297493`*^9}, {
   3.795133360167564*^9, 3.795133366610366*^9}, {3.795135209142764*^9, 
   3.795135232362916*^9}, 3.799836013061008*^9, {3.799836091260789*^9, 
   3.79983609218274*^9}, 3.803038752876319*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"49f89630-305c-4aa4-b376-348dbd61530e"],

Cell["\<\
The following block gets the log likelihood test statistic, which is a \
function of kappa, for each cell.

In addition to getting the functions, the following code outputs the absolute \
time taken to run this code after running, as it will take more than an \
instant.\
\>", "Text",
 CellChangeTimes->{{3.799837041724044*^9, 3.799837060519436*^9}, 
   3.799837111473083*^9, {3.79992582210672*^9, 3.79992583230731*^9}, {
   3.799962485079547*^9, 3.799962563514124*^9}, {3.800014546851994*^9, 
   3.80001457952952*^9}, {3.80002448348267*^9, 3.800024492023471*^9}, {
   3.800086466756229*^9, 3.800086858282424*^9}, {3.8000869630137177`*^9, 
   3.800087379374732*^9}, {3.800087420007597*^9, 3.8000874503921432`*^9}, {
   3.800141216417984*^9, 3.800141222788813*^9}, {3.800306015011758*^9, 
   3.8003061536739798`*^9}, 3.800316326340225*^9, {3.800431947817203*^9, 
   3.800432134179047*^9}, {3.800432171042492*^9, 3.8004323095565033`*^9}, {
   3.800442387502739*^9, 3.800442485643783*^9}, 
   3.801822444090589*^9},ExpressionUUID->"b21abbd2-d8fd-4392-bb83-\
de6be6fd23f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AbsoluteTiming", "[", 
   RowBox[{
    RowBox[{"datateststat", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"Log", "[", 
          RowBox[{"Evaluate", "[", "anglePDF", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"z", ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"dataangles", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "dataangles", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"datateststatresult", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"Maximize", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"datateststat", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", "k"}], "]"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "datateststat", "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.73611220809247*^9, 3.736112228831099*^9}, {
   3.736112539312478*^9, 3.736112576737152*^9}, {3.736156299090949*^9, 
   3.736156338545143*^9}, {3.736156420501432*^9, 3.7361565054394093`*^9}, {
   3.7361583604395037`*^9, 3.7361583801112757`*^9}, 3.736610586295651*^9, 
   3.736610628934793*^9, {3.73694099627907*^9, 3.7369410171262903`*^9}, {
   3.740948530764214*^9, 3.740948535487747*^9}, {3.7437817487608852`*^9, 
   3.743781793509948*^9}, {3.7437823749957*^9, 3.743782375842292*^9}, {
   3.743782582425809*^9, 3.7437825919895906`*^9}, {3.7437826503594933`*^9, 
   3.743782650378042*^9}, {3.7437830956331997`*^9, 3.743783100582255*^9}, {
   3.743783167284788*^9, 3.743783167305941*^9}, {3.7437843507210627`*^9, 
   3.743784351234799*^9}, 3.7437848355759583`*^9, {3.743784867481305*^9, 
   3.743784873221078*^9}, {3.743785753694025*^9, 3.743785774591057*^9}, {
   3.743786186255485*^9, 3.743786186273563*^9}, {3.7437862350103292`*^9, 
   3.7437862350327044`*^9}, {3.743786266316334*^9, 3.743786266338497*^9}, {
   3.743786375919084*^9, 3.7437864032055273`*^9}, {3.74378643996618*^9, 
   3.743786473696855*^9}, {3.743786678833592*^9, 3.7437867077204647`*^9}, {
   3.743786810999913*^9, 3.74378683484628*^9}, {3.743786868482966*^9, 
   3.743786943415264*^9}, {3.745353013051682*^9, 3.74535305924762*^9}, {
   3.7453530994284353`*^9, 3.745353108349078*^9}, {3.745579849687771*^9, 
   3.745579872026745*^9}, {3.745581502063236*^9, 3.7455815020822067`*^9}, {
   3.74558171727658*^9, 3.745581750075494*^9}, {3.745581890888867*^9, 
   3.745581927444726*^9}, {3.745588208526472*^9, 3.745588244868051*^9}, {
   3.745687462146399*^9, 3.745687462161992*^9}, {3.745687675786333*^9, 
   3.7456876758026648`*^9}, {3.745687721588673*^9, 3.745687721605194*^9}, {
   3.745688012151444*^9, 3.745688025550511*^9}, {3.745688147720203*^9, 
   3.745688164615271*^9}, {3.745688441376481*^9, 3.745688453640703*^9}, {
   3.745688594887175*^9, 3.745688622330329*^9}, {3.745688818641925*^9, 
   3.745688835817705*^9}, {3.7456890212599783`*^9, 3.7456890448053513`*^9}, {
   3.7456890781490517`*^9, 3.745689105734263*^9}, {3.74569966570443*^9, 
   3.745699665713901*^9}, {3.745699999663745*^9, 3.7457000015565863`*^9}, {
   3.7457005928847847`*^9, 3.7457005928948507`*^9}, {3.795133626867668*^9, 
   3.79513364206443*^9}, {3.7987333291169147`*^9, 3.798733329275*^9}, 
   3.7992382559899817`*^9, {3.799839988139962*^9, 3.799840008745006*^9}, {
   3.800306112342482*^9, 3.800306112746459*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"7e841054-c615-4304-b8b4-4ae7408fce59"],

Cell[BoxData["1.494974`"], "Output",
 CellChangeTimes->{3.8029912973518057`*^9, 3.803038762054681*^9, 
  3.8035509201579733`*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"d75ad136-0148-48fa-b603-2a2fe539e1f9"]
}, Open  ]],

Cell["\<\
The following block gets the values of the test statistic functions at \
kappa=0. Cells with kappa=0 approximate random movement.\
\>", "Text",
 CellChangeTimes->{{3.7998370628268843`*^9, 3.7998370691730947`*^9}, 
   3.799837112485928*^9, {3.799925841210791*^9, 3.79992595758891*^9}, {
   3.799962627776997*^9, 3.7999626487669897`*^9}, {3.800014589783022*^9, 
   3.8000146197159367`*^9}, {3.800024891295744*^9, 3.800024913854395*^9}, {
   3.8000874696805687`*^9, 3.800087534887786*^9}, {3.800369259104012*^9, 
   3.800369266391891*^9}, 
   3.8018224460543537`*^9},ExpressionUUID->"f33619dc-3516-40ee-b97e-\
038fad36c49c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datateststat0", " ", "=", " ", 
   RowBox[{"datateststat", "/.", 
    RowBox[{"k", "\[Rule]", "0.000001"}]}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.736158399482081*^9, {3.736941032396467*^9, 3.736941033384036*^9}, 
   3.7437818150245113`*^9, {3.7437818680762463`*^9, 3.7437818729586563`*^9}, {
   3.7437823798313847`*^9, 3.743782380044388*^9}, {3.743782587354517*^9, 
   3.743782587689036*^9}, {3.743782650401939*^9, 3.743782650406797*^9}, {
   3.743783095651195*^9, 3.743783095656262*^9}, {3.743783167313573*^9, 
   3.743783167318115*^9}, {3.743785193059699*^9, 3.743785194179303*^9}, {
   3.74378575508212*^9, 3.7437857746033583`*^9}, {3.743786186281046*^9, 
   3.743786186285532*^9}, {3.743786235040331*^9, 3.7437862350448847`*^9}, {
   3.743786266346157*^9, 3.743786266351259*^9}, {3.743786375945632*^9, 
   3.743786403218493*^9}, {3.7437864399968243`*^9, 3.743786467860486*^9}, {
   3.7437866788624477`*^9, 3.7437867077333612`*^9}, {3.743786811028339*^9, 
   3.743786834859487*^9}, {3.743786868509223*^9, 3.7437869434280853`*^9}, {
   3.745353124354534*^9, 3.7453531343769207`*^9}, {3.745581502109383*^9, 
   3.7455815021122313`*^9}, {3.745581717298081*^9, 3.745581750083248*^9}, {
   3.745581890940782*^9, 3.745581927466481*^9}, {3.7455882085624657`*^9, 
   3.745588244875724*^9}, {3.74568746216649*^9, 3.745687462169703*^9}, {
   3.745687675807289*^9, 3.745687675810396*^9}, {3.74568772161012*^9, 
   3.74568772161322*^9}, {3.745688012172011*^9, 3.7456880255583*^9}, {
   3.745688147740024*^9, 3.745688164642764*^9}, {3.745688441396166*^9, 
   3.745688453648039*^9}, {3.74568859492809*^9, 3.7456886223379803`*^9}, {
   3.7456888186631193`*^9, 3.7456888358251534`*^9}, {3.74568902128019*^9, 
   3.7456890448129873`*^9}, {3.7456890781697683`*^9, 3.745689105764701*^9}, {
   3.745699665718151*^9, 3.745699665721365*^9}, {3.7457005928976707`*^9, 
   3.745700592900538*^9}, {3.795134702935349*^9, 3.795134719253726*^9}, 
   3.799238254280375*^9},
 CellLabel->
  "In[185]:=",ExpressionUUID->"d258394a-7b24-4e33-82df-a678145cd625"],

Cell["\<\
The following block prints the estimated kappas of each T cell. \
\>", "Text",
 CellChangeTimes->{{3.799837101665288*^9, 3.7998371066816597`*^9}, {
   3.799962655361351*^9, 3.799962671494776*^9}, {3.800014624073949*^9, 
   3.800014660974415*^9}, {3.800024918577532*^9, 3.80002492186559*^9}, 
   3.80182244763964*^9},ExpressionUUID->"46e4ed3c-f5aa-4d87-8b52-\
cb645de6627e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"datatestKs", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"datateststatresult", "[", 
        RowBox[{"[", "ii", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ii", ",", 
      RowBox[{"Length", "[", "datateststatresult", "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7816906522627897`*^9, 3.781690705062039*^9}, {
  3.7816908294449797`*^9, 3.7816908510145473`*^9}, {3.781691144071*^9, 
  3.781691163091743*^9}, {3.784762385429516*^9, 3.7847624263769627`*^9}, {
  3.795134984202836*^9, 3.79513500684193*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"f19d06de-659b-4c06-989d-92a2dc085d86"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.026550409205721284`"}], ",", 
   RowBox[{"-", "3.1352739222507036`"}], ",", "0.8775719448273067`", ",", 
   RowBox[{"-", "0.12900360845706332`"}], ",", 
   RowBox[{"-", "0.1622458599308`"}], ",", 
   RowBox[{"-", "0.7190160397543739`"}], ",", 
   RowBox[{"-", "0.4725597723533415`"}], ",", 
   RowBox[{"-", "1.0484319251519272`"}], ",", 
   RowBox[{"-", "2.3739223876929962`"}], ",", "0.3780974762715342`", ",", 
   "1.2001282855465245`", ",", "0.8904677836940792`", ",", 
   "0.4327690191742569`", ",", 
   RowBox[{"-", "2.9477704669534734`"}], ",", "0.3097716812441341`", ",", 
   RowBox[{"-", "0.3548237421160805`"}], ",", 
   RowBox[{"-", "0.26358282653926646`"}], ",", 
   RowBox[{"-", "0.281123877068781`"}], ",", "0.5730960139553237`", ",", 
   "0.1389761501576`", ",", "0.07528481560321458`", ",", 
   "0.3640246305030117`", ",", "0.8469691468774091`", ",", 
   "1.1196890625709137`", ",", "6.6133711153810335`", ",", 
   "0.9825315767551281`", ",", 
   RowBox[{"-", "0.28347206394088587`"}], ",", 
   RowBox[{"-", "1.4210632919778516`"}], ",", "2.4079607451437632`", ",", 
   RowBox[{"-", "1.2850529688451229`"}], ",", 
   RowBox[{"-", "0.47425476816796813`"}], ",", "0.21227424680821017`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.802991297568005*^9, 3.803038798727265*^9, 
  3.803550922053843*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"c1932581-aee7-4ca9-9f50-331583ce9554"]
}, Open  ]],

Cell["\<\
The following block prints the p-values for each cell. These are acquired by \
comparing the maximized test statistic and the test statistic at kappa=0 \
using a Chi Square test, with kappa=0 being the null hypothesis.\
\>", "Text",
 CellChangeTimes->{{3.799837087217596*^9, 3.7998371281913958`*^9}, {
   3.799962681530287*^9, 3.799962703397087*^9}, {3.8000875570954027`*^9, 
   3.800087622170397*^9}, {3.800370332037527*^9, 3.8003703410849037`*^9}, 
   3.80182245003483*^9},ExpressionUUID->"c61ff1dc-9332-4feb-bed2-\
aafc07bb6013"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"datateststatLRK", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"datateststat0", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "-", 
        RowBox[{
         RowBox[{"datateststatresult", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "datateststat", "]"}]}], "}"}]}], "]"}]}], ";", 
  
  RowBox[{"datatestStatChiSquarePValue", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Probability", "[", 
      RowBox[{
       RowBox[{"x", " ", "\[GreaterEqual]", " ", 
        RowBox[{"datateststatLRK", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
       RowBox[{"x", " ", "\[Distributed]", " ", 
        RowBox[{"ChiSquareDistribution", "[", "1", "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "datateststat", "]"}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.736642415132927*^9, 3.736642419870833*^9}, {
   3.736642555210843*^9, 3.736642599518866*^9}, {3.736679914949683*^9, 
   3.7366799467424297`*^9}, 3.736692941611136*^9, 3.736941089792636*^9, {
   3.738274638957715*^9, 3.73827463978964*^9}, {3.7437819272111073`*^9, 
   3.7437819293480377`*^9}, {3.7437823808780823`*^9, 3.743782381018155*^9}, {
   3.743782589406307*^9, 3.743782589873816*^9}, {3.743782650447873*^9, 
   3.743782650452216*^9}, {3.743783095679908*^9, 3.7437830956854687`*^9}, {
   3.74378316734162*^9, 3.743783167346983*^9}, {3.743785219112191*^9, 
   3.743785224372306*^9}, {3.7437857591053677`*^9, 3.743785774632723*^9}, {
   3.7437861755256653`*^9, 3.7437861755306*^9}, {3.7437862350686197`*^9, 
   3.743786235073534*^9}, {3.743786266376025*^9, 3.743786266382394*^9}, {
   3.743786375977375*^9, 3.743786403249872*^9}, {3.743786440030159*^9, 
   3.743786467890711*^9}, {3.7437866788931637`*^9, 3.7437867077634974`*^9}, {
   3.743786811060369*^9, 3.74378683489261*^9}, {3.74378686853833*^9, 
   3.7437869434586153`*^9}, {3.745353127169675*^9, 3.745353128178042*^9}, {
   3.7455807306435137`*^9, 3.7455807462782907`*^9}, {3.745581502134162*^9, 
   3.745581502140195*^9}, {3.7455817173236237`*^9, 3.745581750107525*^9}, {
   3.745581890985126*^9, 3.745581927490746*^9}, {3.745588208618453*^9, 
   3.7455882449049053`*^9}, {3.745687462188261*^9, 3.745687462194665*^9}, {
   3.745687675828492*^9, 3.7456876758349257`*^9}, {3.74568772164445*^9, 
   3.74568772165069*^9}, {3.74568801219307*^9, 3.745688025600872*^9}, {
   3.745688147765397*^9, 3.745688164681716*^9}, {3.745688441417817*^9, 
   3.7456884536725693`*^9}, {3.745688594949007*^9, 3.74568862236694*^9}, {
   3.745688818685162*^9, 3.745688835849821*^9}, {3.745689021306243*^9, 
   3.745689044837921*^9}, {3.7456890781913958`*^9, 3.745689105795673*^9}, {
   3.7456996657405453`*^9, 3.745699665747511*^9}, {3.7457005929155827`*^9, 
   3.745700592921638*^9}, {3.795134966465913*^9, 3.795134979135515*^9}, 
   3.7998370831731863`*^9},
 CellLabel->
  "In[187]:=",ExpressionUUID->"0cb5d96f-8054-492f-9c40-3d08adb482bc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9267190641178187`", ",", "0.0000920328428211855`", ",", 
   "0.0007169920013303776`", ",", "0.6378787039151891`", ",", 
   "0.4761815855337242`", ",", "0.057592305268624855`", ",", 
   "0.08789229923809608`", ",", "0.05662395026839952`", ",", 
   "6.594271783119318`*^-8", ",", "0.15050011310833317`", ",", 
   "0.001192043611423831`", ",", "0.19036000260540192`", ",", 
   "0.19021904979979223`", ",", "5.589931626964184`*^-6", ",", 
   "0.39330861132524664`", ",", "0.10072955114099273`", ",", 
   "0.22503959748563965`", ",", "0.19588594151941133`", ",", 
   "0.013154190165284307`", ",", "0.7006569936784739`", ",", 
   "0.7657813796919116`", ",", "0.10295095863617695`", ",", 
   "0.0002528950380887024`", ",", "7.469509717073702`*^-6", ",", 
   "0.000013159927797602027`", ",", "0.0015802789658898892`", ",", 
   "0.38003310601989065`", ",", "0.00007373117087248836`", ",", 
   "7.323879736972665`*^-9", ",", "0.005936692912763849`", ",", 
   "0.39182921254766195`", ",", "0.6141369512596463`"}], "}"}]], "Output",
 CellChangeTimes->{3.8029913004355707`*^9, 3.803038810549344*^9, 
  3.803550923474353*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"a214e1c4-2f20-4367-84cc-63a88d71f1dc"]
}, Open  ]],

Cell["\<\
The following block creates a histogram of the kappas for each cell.\
\>", "Text",
 CellChangeTimes->{{3.801766424761086*^9, 3.801766433603883*^9}, 
   3.801822452131194*^9},ExpressionUUID->"5652b47d-55be-4bc7-ae96-\
0fa2c908fab1"],

Cell[BoxData[
 RowBox[{"Histogram", "[", "datatestKs", "]"}]], "Input",
 CellChangeTimes->{{3.801765888786566*^9, 3.80176589116953*^9}},
 CellLabel->
  "In[529]:=",ExpressionUUID->"a8642c1b-18a0-45da-a46a-77b71f189b91"],

Cell["\<\
The following block creates a histogram of the p-values for each cell.\
\>", "Text",
 CellChangeTimes->{{3.801766437319735*^9, 3.8017664396114807`*^9}, 
   3.801822453952405*^9},ExpressionUUID->"de66e758-874d-4a37-a393-\
f62cc8b2de8f"],

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"datatestStatChiSquarePValue", ",", "\"\<Log\>\""}], "]"}]], "Input",\

 CellChangeTimes->{{3.801765899496249*^9, 3.801765925684639*^9}},
 CellLabel->
  "In[530]:=",ExpressionUUID->"c4fb3612-85fd-4a7f-9a3d-a6c890953dec"],

Cell["\<\
The following block prints the {kappa,p-value} pair for each cell. A large \
positive kappa corresponds to high attraction, kappa=0 corresponds to no \
attraction, and a large negative kappa corresponds to high repulsion. A \
significant p-value corresponds to significant bias (attraction or \
repulsion), which will correlate to some degree with the scale of the kappa \
value.\
\>", "Text",
 CellChangeTimes->{{3.8004425950619793`*^9, 3.800442697348105*^9}, 
   3.801822456588523*^9},ExpressionUUID->"8fbb88e2-db8e-46de-a2cc-\
82351c781afe"],

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
   "\"\<The following are {\[Kappa],p-value} pairs for each cell from the \
input data. The \[Kappa] measures bias toward the parasite, with 0 being no \
bias, positive being attraction, and negative being repulsion. The p-value \
tells if the detected bias is significantly different from random.\>\"", ",", 
    
    RowBox[{"Background", "\[Rule]", "LightOrange"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Style", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"datatestKs", ",", "datatestStatChiSquarePValue"}], "}"}], "]"}],
    ",", 
   RowBox[{"Background", "\[Rule]", "LightOrange"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.801321940066558*^9, 3.801321958291918*^9}, {
  3.8013227979484777`*^9, 3.801322929365478*^9}, {3.801322962646914*^9, 
  3.8013229897620773`*^9}},
 CellLabel->
  "In[531]:=",ExpressionUUID->"f0ccd9a2-130c-4fcf-9633-623e9e68e903"],

Cell["\<\
The following block prints the {kappa,p-value} pairs from the previous cell \
to a file in the current directory (the same directory as the data files if \
the directory has not been changed).\
\>", "Text",
 CellChangeTimes->{{3.800442702522853*^9, 3.800442717012637*^9}, {
   3.801321912547792*^9, 3.801321916462748*^9}, {3.801396418484395*^9, 
   3.801396448230526*^9}, 
   3.801822459805941*^9},ExpressionUUID->"faecd8e0-1607-4acb-b3c1-\
91e8b0f9cdf6"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<outputkappapvalue.csv\>\"", ",", 
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"datatestKs", ",", "datatestStatChiSquarePValue"}], "}"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<kappa\>\"", ",", "\"\<p-value\>\""}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.800204348485402*^9, 3.800204374405776*^9}, {
  3.80047473282482*^9, 3.800474737885025*^9}, {3.801766296894787*^9, 
  3.801766314691237*^9}},
 CellLabel->
  "In[8353]:=",ExpressionUUID->"111a292a-8234-484e-8cc5-30bdfa0ff9e8"],

Cell["\<\
The following block performs the same analysis on the pooled data, that is, \
all the angles of all the cells pooled together. It prints the value of kappa \
and then the p-value.\
\>", "Text",
 CellChangeTimes->{{3.801762704752544*^9, 3.8017627413627167`*^9}, 
   3.801822460760376*^9},ExpressionUUID->"e2677314-a835-4a88-a2b1-\
0d4c20928ef9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pooledteststat", " ", "=", " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"Evaluate", "[", "anglePDF", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"Flatten", "[", "dataangles", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pooledteststatresult", " ", "=", " ", 
   RowBox[{"N", "[", 
    RowBox[{"Maximize", "[", 
     RowBox[{
      RowBox[{"{", "pooledteststat", "}"}], ",", "k"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pooledteststat0", " ", "=", " ", 
   RowBox[{"pooledteststat", "/.", 
    RowBox[{"k", "\[Rule]", "0.000001"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"pooledtestKs", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"pooledteststatresult", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pooledteststatLRK", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"(", 
     RowBox[{"pooledteststat0", "-", 
      RowBox[{"pooledteststatresult", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], ";", 
  RowBox[{"pooledtestStatChiSquarePValue", " ", "=", " ", 
   RowBox[{"Probability", "[", 
    RowBox[{
     RowBox[{"x", " ", "\[GreaterEqual]", " ", "pooledteststatLRK"}], ",", 
     " ", 
     RowBox[{"x", " ", "\[Distributed]", " ", 
      RowBox[{"ChiSquareDistribution", "[", "1", "]"}]}]}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.73611220809247*^9, 3.736112228831099*^9}, {
   3.736112539312478*^9, 3.736112576737152*^9}, {3.736156299090949*^9, 
   3.736156338545143*^9}, {3.736156420501432*^9, 3.7361565054394093`*^9}, {
   3.7361583604395037`*^9, 3.7361583801112757`*^9}, 3.736610586295651*^9, 
   3.736610628934793*^9, {3.73694099627907*^9, 3.7369410171262903`*^9}, {
   3.740948530764214*^9, 3.740948535487747*^9}, {3.7437817487608852`*^9, 
   3.743781793509948*^9}, {3.7437823749957*^9, 3.743782375842292*^9}, {
   3.743782582425809*^9, 3.7437825919895906`*^9}, {3.7437826503594933`*^9, 
   3.743782650378042*^9}, {3.7437830956331997`*^9, 3.743783100582255*^9}, {
   3.743783167284788*^9, 3.743783167305941*^9}, {3.7437843507210627`*^9, 
   3.743784351234799*^9}, 3.7437848355759583`*^9, {3.743784867481305*^9, 
   3.743784873221078*^9}, {3.743785753694025*^9, 3.743785774591057*^9}, {
   3.743786186255485*^9, 3.743786186273563*^9}, {3.7437862350103292`*^9, 
   3.7437862350327044`*^9}, {3.743786266316334*^9, 3.743786266338497*^9}, {
   3.743786375919084*^9, 3.7437864032055273`*^9}, {3.74378643996618*^9, 
   3.743786473696855*^9}, {3.743786678833592*^9, 3.7437867077204647`*^9}, {
   3.743786810999913*^9, 3.74378683484628*^9}, {3.743786868482966*^9, 
   3.743786943415264*^9}, {3.745353013051682*^9, 3.74535305924762*^9}, {
   3.7453530994284353`*^9, 3.745353108349078*^9}, {3.745579849687771*^9, 
   3.745579872026745*^9}, {3.745581502063236*^9, 3.7455815020822067`*^9}, {
   3.74558171727658*^9, 3.745581750075494*^9}, {3.745581890888867*^9, 
   3.745581927444726*^9}, {3.745588208526472*^9, 3.745588244868051*^9}, {
   3.745687462146399*^9, 3.745687462161992*^9}, {3.745687675786333*^9, 
   3.7456876758026648`*^9}, {3.745687721588673*^9, 3.745687721605194*^9}, {
   3.745688012151444*^9, 3.745688025550511*^9}, {3.745688147720203*^9, 
   3.745688164615271*^9}, {3.745688441376481*^9, 3.745688453640703*^9}, {
   3.745688594887175*^9, 3.745688622330329*^9}, {3.745688818641925*^9, 
   3.745688835817705*^9}, {3.7456890212599783`*^9, 3.7456890448053513`*^9}, {
   3.7456890781490517`*^9, 3.745689105734263*^9}, {3.74569966570443*^9, 
   3.745699665713901*^9}, {3.745699999663745*^9, 3.7457000015565863`*^9}, {
   3.7457005928847847`*^9, 3.7457005928948507`*^9}, {3.795133626867668*^9, 
   3.79513364206443*^9}, {3.7987333291169147`*^9, 3.798733329275*^9}, 
   3.7992382559899817`*^9, {3.799839988139962*^9, 3.799840008745006*^9}, {
   3.800306112342482*^9, 3.800306112746459*^9}, {3.801761810062798*^9, 
   3.801761819288975*^9}, {3.8017620725578737`*^9, 3.8017621783346233`*^9}, {
   3.80176264101593*^9, 3.801762654827505*^9}, {3.801762690084399*^9, 
   3.801762693952222*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"30b6b824-d4d8-4916-9521-a846e5c98a1f"],

Cell[BoxData["0.09344059789242984`"], "Output",
 CellChangeTimes->{3.802991307727893*^9, 3.803038817289497*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"1087d4a2-e494-4f62-9c00-b5f9dff93740"],

Cell[BoxData["0.07489279182998834`"], "Output",
 CellChangeTimes->{3.802991307727893*^9, 3.803038817294166*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"75b14d9d-6630-457c-b7a5-d896ac2ffade"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1174, 814},
WindowMargins->{{Automatic, 54}, {Automatic, 1}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 169, 3, 44, "Text",ExpressionUUID->"2759cb34-ba5e-454c-b4e5-4bd8df43868b"],
Cell[730, 25, 390, 7, 44, "Text",ExpressionUUID->"c35ad362-441f-442b-9171-49f1bc800d38"],
Cell[CellGroupData[{
Cell[1145, 36, 182, 3, 84, "Section",ExpressionUUID->"285602ab-1d64-4f16-bde4-56bbdff81d19"],
Cell[CellGroupData[{
Cell[1352, 43, 163, 3, 56, "Subsubsection",ExpressionUUID->"b4f2c1cd-df86-465c-9fd2-5f116843f567"],
Cell[1518, 48, 1637, 25, 188, "Text",ExpressionUUID->"817478d9-ca7a-43f7-bc3b-4c223f7be159"],
Cell[3158, 75, 1414, 23, 159, "Text",ExpressionUUID->"5b4afbe7-9aa4-4406-9837-908483d913fc"],
Cell[4575, 100, 1157, 21, 246, "Text",ExpressionUUID->"7bde6f3b-0ea3-47c1-a2b2-f07f7927a9fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5769, 126, 213, 4, 56, "Subsubsection",ExpressionUUID->"27ad105a-44c0-4b4f-87d3-bb9be104e4a9"],
Cell[5985, 132, 1431, 23, 188, "Text",ExpressionUUID->"74e4f7d5-40c1-403a-a49e-51cf960ac3ea"],
Cell[7419, 157, 393, 6, 64, "Input",ExpressionUUID->"7f349f48-2754-4698-8bfe-fd8aadca9ea4"],
Cell[7815, 165, 626, 11, 73, "Text",ExpressionUUID->"2393a141-bc0c-4eb5-96ef-c2eeb9f46232"],
Cell[CellGroupData[{
Cell[8466, 180, 676, 17, 110, "Input",ExpressionUUID->"cc7dbd36-a449-41b4-b640-d1a0250a952c"],
Cell[9145, 199, 486, 12, 59, "Output",ExpressionUUID->"53d307bf-571e-48cf-a158-df1f7db7cb4b"]
}, Open  ]],
Cell[9646, 214, 714, 14, 73, "Text",ExpressionUUID->"5075977a-3b12-4c9a-9cd5-5f0cd1bb2d26"],
Cell[CellGroupData[{
Cell[10385, 232, 900, 17, 90, "Input",ExpressionUUID->"39134413-5f5a-4793-966f-fd3dcebfa105"],
Cell[11288, 251, 428, 7, 42, "Output",ExpressionUUID->"440d64e1-a434-4432-bc67-2c0aaf3e54ab"]
}, Open  ]],
Cell[11731, 261, 777, 13, 131, "Text",ExpressionUUID->"386805f9-9fb5-4864-a3f4-36d03c3b6c45"],
Cell[CellGroupData[{
Cell[12533, 278, 1132, 25, 142, "Input",ExpressionUUID->"3481aada-d569-4a1b-beb5-b1111c5dd719"],
Cell[13668, 305, 468, 7, 42, "Output",ExpressionUUID->"82e2a0a2-1a18-4ad9-aa29-97ec875933f5"],
Cell[14139, 314, 567, 10, 42, "Output",ExpressionUUID->"6cd09e5d-5c82-4f5b-8236-df124d31cbb4"],
Cell[14709, 326, 560, 10, 42, "Output",ExpressionUUID->"6b63eb06-5f03-436f-9a71-4ed39d9e2817"],
Cell[15272, 338, 485, 8, 42, "Output",ExpressionUUID->"401b0b6d-ef96-45a2-8b79-8df451f8c9d3"]
}, Open  ]],
Cell[15772, 349, 1640, 25, 188, "Text",ExpressionUUID->"1f78f8a0-8eaa-4471-8471-380d87cc399e"],
Cell[CellGroupData[{
Cell[17437, 378, 1951, 43, 220, "Input",ExpressionUUID->"f2a4c1df-d34d-48c1-8d50-22ac0434d46a"],
Cell[19391, 423, 382, 7, 42, "Output",ExpressionUUID->"36a28206-2bb5-479e-805e-f01b8ac9bbc7"],
Cell[19776, 432, 249, 4, 42, "Output",ExpressionUUID->"3998693c-5b67-425c-b8f6-99461cf78e35"],
Cell[20028, 438, 634, 11, 69, "Output",ExpressionUUID->"8c8afae2-ec88-45fc-a68e-07378ace10f9"],
Cell[20665, 451, 1428, 22, 121, "Output",ExpressionUUID->"1fe470f8-ef27-4a02-9f58-30f351c4c498"],
Cell[22096, 475, 263, 5, 42, "Output",ExpressionUUID->"b5c52381-599d-437c-bccc-33e6ddddc187"]
}, Open  ]],
Cell[22374, 483, 318, 9, 37, "Input",ExpressionUUID->"04b37847-3804-4fd7-84b6-822da4e15ed3"],
Cell[CellGroupData[{
Cell[22717, 496, 625, 15, 64, "Input",ExpressionUUID->"6e87c5f0-fc81-4474-9836-734215650c54"],
Cell[23345, 513, 1329, 20, 121, "Output",ExpressionUUID->"8c35b08f-6480-4899-9d76-39b3a9bf0805"],
Cell[24677, 535, 263, 5, 42, "Output",ExpressionUUID->"66a163d4-17f9-4788-843c-0a4e889df661"]
}, Open  ]],
Cell[24955, 543, 2104, 53, 194, "Input",ExpressionUUID->"95e7c163-3fa3-498b-bac5-1988a49d9d5c"],
Cell[27062, 598, 697, 12, 102, "Text",ExpressionUUID->"329c9d86-f376-407f-9005-f270125b39e4"],
Cell[27762, 612, 749, 20, 37, "Input",ExpressionUUID->"c3fce618-ecb8-4472-9480-a22e053f4709"],
Cell[28514, 634, 2224, 35, 361, "Text",ExpressionUUID->"d8a712e7-2e21-4e7a-9026-0c77d3344a24"],
Cell[30741, 671, 924, 22, 116, "Input",ExpressionUUID->"3295426e-a36b-483f-b1a2-976c485dbba5"],
Cell[31668, 695, 859, 14, 102, "Text",ExpressionUUID->"d7630805-b913-42b8-92ff-dc3ea118e5d6"],
Cell[32530, 711, 7000, 181, 558, "Input",ExpressionUUID->"3aa908c9-cd5d-4125-b7f7-401142db1a02"],
Cell[39533, 894, 536, 9, 73, "Text",ExpressionUUID->"95c766a9-fea0-4a43-9269-f2b263ebd79d"],
Cell[CellGroupData[{
Cell[40094, 907, 3083, 83, 272, "Input",ExpressionUUID->"24f6019b-47e0-4204-b57d-9ef2ba83a3c7"],
Cell[43180, 992, 57288, 1698, 282, "Output",ExpressionUUID->"783e7e05-dc22-4a06-abc2-144caeaec5ea"]
}, Open  ]],
Cell[100483, 2693, 1728, 27, 303, "Text",ExpressionUUID->"b795a9d3-1fd0-4143-9248-c85b3865a1f3"],
Cell[102214, 2722, 1881, 46, 142, "Input",ExpressionUUID->"49f89630-305c-4aa4-b376-348dbd61530e"],
Cell[104098, 2770, 1079, 19, 131, "Text",ExpressionUUID->"b21abbd2-d8fd-4392-bb83-de6be6fd23f6"],
Cell[CellGroupData[{
Cell[105202, 2793, 3767, 70, 168, "Input",ExpressionUUID->"7e841054-c615-4304-b8b4-4ae7408fce59"],
Cell[108972, 2865, 212, 4, 42, "Output",ExpressionUUID->"d75ad136-0148-48fa-b603-2a2fe539e1f9"]
}, Open  ]],
Cell[109199, 2872, 631, 11, 44, "Text",ExpressionUUID->"f33619dc-3516-40ee-b97e-038fad36c49c"],
Cell[109833, 2885, 2071, 32, 37, "Input",ExpressionUUID->"d258394a-7b24-4e33-82df-a678145cd625"],
Cell[111907, 2919, 383, 7, 44, "Text",ExpressionUUID->"46e4ed3c-f5aa-4d87-8b52-cb645de6627e"],
Cell[CellGroupData[{
Cell[112315, 2930, 834, 21, 37, "Input",ExpressionUUID->"f19d06de-659b-4c06-989d-92a2dc085d86"],
Cell[113152, 2953, 1453, 29, 121, "Output",ExpressionUUID->"c1932581-aee7-4ca9-9f50-331583ce9554"]
}, Open  ]],
Cell[114620, 2985, 542, 9, 73, "Text",ExpressionUUID->"c61ff1dc-9332-4feb-bed2-aafc07bb6013"],
Cell[CellGroupData[{
Cell[115187, 2998, 3220, 62, 116, "Input",ExpressionUUID->"0cb5d96f-8054-492f-9c40-3d08adb482bc"],
Cell[118410, 3062, 1239, 22, 126, "Output",ExpressionUUID->"a214e1c4-2f20-4367-84cc-63a88d71f1dc"]
}, Open  ]],
Cell[119664, 3087, 241, 5, 44, "Text",ExpressionUUID->"5652b47d-55be-4bc7-ae96-0fa2c908fab1"],
Cell[119908, 3094, 219, 4, 37, "Input",ExpressionUUID->"a8642c1b-18a0-45da-a46a-77b71f189b91"],
Cell[120130, 3100, 245, 5, 44, "Text",ExpressionUUID->"de66e758-874d-4a37-a393-f62cc8b2de8f"],
Cell[120378, 3107, 272, 6, 37, "Input",ExpressionUUID->"c4fb3612-85fd-4a7f-9a3d-a6c890953dec"],
Cell[120653, 3115, 554, 10, 102, "Text",ExpressionUUID->"8fbb88e2-db8e-46de-a2cc-82351c781afe"],
Cell[121210, 3127, 983, 22, 194, "Input",ExpressionUUID->"f0ccd9a2-130c-4fcf-9633-623e9e68e903"],
Cell[122196, 3151, 465, 9, 73, "Text",ExpressionUUID->"faecd8e0-1607-4acb-b3c1-91e8b0f9cdf6"],
Cell[122664, 3162, 635, 16, 64, "Input",ExpressionUUID->"111a292a-8234-484e-8cc5-30bdfa0ff9e8"],
Cell[123302, 3180, 354, 7, 73, "Text",ExpressionUUID->"e2677314-a835-4a88-a2b1-0d4c20928ef9"],
Cell[CellGroupData[{
Cell[123681, 3191, 4341, 82, 168, "Input",ExpressionUUID->"30b6b824-d4d8-4916-9521-a846e5c98a1f"],
Cell[128025, 3275, 190, 2, 42, "Output",ExpressionUUID->"1087d4a2-e494-4f62-9c00-b5f9dff93740"],
Cell[128218, 3279, 190, 2, 42, "Output",ExpressionUUID->"75b14d9d-6630-457c-b7a5-d896ac2ffade"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

